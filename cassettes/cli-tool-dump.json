[
  {
    "scope": "http://account-api.lvh.me:3001",
    "method": "GET",
    "path": "/docs/account-api-hyperschema.json",
    "body": "",
    "status": 200,
    "response": {
      "$schema": "http://interagent.github.io/interagent-hyper-schema",
      "title": "DatoCMS Account API",
      "description": "",
      "type": "object",
      "id": "dato-api",
      "links": [
        {
          "href": "https://account-api.datocms.com",
          "rel": "self"
        }
      ],
      "properties": {
        "session": {
          "$ref": "#/definitions/session"
        },
        "account": {
          "$ref": "#/definitions/account"
        },
        "site": {
          "$ref": "#/definitions/site"
        },
        "subscription": {
          "$ref": "#/definitions/subscription"
        },
        "plan": {
          "$ref": "#/definitions/plan"
        },
        "job_result": {
          "$ref": "#/definitions/job_result"
        },
        "site_transfer": {
          "$ref": "#/definitions/site_transfer"
        },
        "site_invitation": {
          "$ref": "#/definitions/site_invitation"
        },
        "subscription_compatibility": {
          "$ref": "#/definitions/subscription_compatibility"
        },
        "job": {
          "$ref": "#/definitions/job"
        },
        "oauth_application": {
          "$ref": "#/definitions/oauth_application"
        }
      },
      "definitions": {
        "session": {
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new session",
              "description": "",
              "href": "/sessions",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "anyOf": [
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "attributes"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type field",
                            "pattern": "^email_credentials$",
                            "example": "email_credentials"
                          },
                          "attributes": {
                            "description": "JSON API attributes",
                            "type": "object",
                            "required": [
                              "email",
                              "password"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "email": {
                                "type": "string",
                                "description": "Email",
                                "example": "foo@bar.com"
                              },
                              "password": {
                                "type": "string",
                                "description": "Password",
                                "example": "changeme"
                              },
                              "otp_code": {
                                "type": "string",
                                "description": "Two-factor authentication one-time password",
                                "example": "123512"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "attributes"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type field",
                            "pattern": "^password_reset$",
                            "example": "password_reset"
                          },
                          "attributes": {
                            "description": "JSON API attributes",
                            "type": "object",
                            "required": [
                              "token",
                              "password"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "token": {
                                "type": "string",
                                "description": "Invitation token",
                                "example": "XXXYYYZZZ"
                              },
                              "password": {
                                "type": "string",
                                "description": "Password",
                                "example": "changeme"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/session"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/account"
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Session",
          "description": "A session is required to access to read-and-write API endpoints",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/session/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/session/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/session/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^session$",
              "example": "session"
            },
            "id": {
              "description": "JSON web token for the session",
              "type": "string",
              "example": "eyJCJhbGci.eyJhaWwuY29tIn0.32wQOMci"
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "account"
              ],
              "additionalProperties": false,
              "properties": {
                "account": {
                  "type": "object",
                  "description": "The account associated with the session",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/account/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/session/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/session/definitions/id"
            },
            "relationships": {
              "$ref": "#/definitions/session/definitions/relationships"
            }
          }
        },
        "account": {
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new account",
              "description": "",
              "href": "/account",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/account/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "email",
                          "password"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "email": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/email"
                          },
                          "first_name": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/first_name"
                          },
                          "last_name": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/last_name"
                          },
                          "company": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/company"
                          },
                          "password": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/password"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/session"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/account"
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a account",
              "description": "",
              "href": "/account",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/account/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/account/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "email": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/email"
                          },
                          "first_name": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/first_name"
                          },
                          "last_name": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/last_name"
                          },
                          "company": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/company"
                          },
                          "password": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/password"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/session"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/account"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a account",
              "description": "",
              "href": "/account",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "reset_password",
              "title": "Request a password reset",
              "description": "",
              "href": "/account/reset_password",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/account/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "email"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "email": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/email"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "activate_2fa",
              "title": "Activates 2-factor authorization",
              "description": "",
              "href": "/account/activate-2fa",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "description": "JSON API type field",
                        "type": [
                          "string"
                        ],
                        "pattern": "^2fa_activation$",
                        "example": "2fa_activation"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "otp_code"
                        ],
                        "properties": {
                          "otp_code": {
                            "type": "string",
                            "description": "OTP code",
                            "example": "123 456"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Account",
          "description": "DatoCMS account",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/account/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/account/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/account/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^account$",
              "example": "account"
            },
            "id": {
              "description": "ID of account",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "email",
                "company"
              ],
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email",
                  "example": "foo@bar.com"
                },
                "first_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "First name",
                  "example": "Mark"
                },
                "last_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Last name",
                  "example": "Smith"
                },
                "company": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Company name",
                  "example": "Dundler Mifflin"
                },
                "password": {
                  "type": "string",
                  "description": "Password"
                },
                "api_token": {
                  "type": "string",
                  "description": "API token"
                },
                "is_2fa_active": {
                  "type": "boolean",
                  "description": "Whether 2-factor authentication is active for this account or not"
                },
                "provisioning_2fa_uri": {
                  "type": "string",
                  "description": "2-factor authentication provisioning URI"
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/account/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/account/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/account/definitions/attributes"
            }
          }
        },
        "site": {
          "links": [
            {
              "rel": "self",
              "method": "GET",
              "title": "Retrieve a site",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all sites",
              "description": "",
              "href": "/sites",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "meta"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/site"
                    }
                  },
                  "meta": {
                    "type": "object"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new site",
              "description": "",
              "href": "/sites",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/site/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/name"
                          },
                          "internal_subdomain": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/internal_subdomain"
                          },
                          "domain": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/domain"
                          },
                          "notes": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/notes"
                          },
                          "template": {
                            "description": "Site template",
                            "type": [
                              "string",
                              "null"
                            ],
                            "example": "portfolio"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a new site",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "id",
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "$ref": "#/definitions/site/definitions/id"
                      },
                      "type": {
                        "$ref": "#/definitions/site/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/name"
                          },
                          "domain": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/domain"
                          },
                          "internal_subdomain": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/internal_subdomain"
                          },
                          "notes": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/notes"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a site",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "duplicate",
              "title": "Duplicate an existing site",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}/duplicate",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/site/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "name",
                          "recurrence",
                          "extra_packets"
                        ],
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/name"
                          },
                          "ignore_content": {
                            "type": "boolean",
                            "description": "When duplicating a site it allows to duplicate only the schema",
                            "example": true
                          },
                          "payment_intent_id": {
                            "type": "string"
                          },
                          "recurrence": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/recurrence"
                          },
                          "extra_packets": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/extra_packets"
                          },
                          "billing_profile": {
                            "type": [
                              "null",
                              "object"
                            ],
                            "required": [
                              "address_line",
                              "city",
                              "country",
                              "email",
                              "first_name",
                              "last_name",
                              "state",
                              "zip"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "address_line": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "company": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "country": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "first_name": {
                                "type": "string"
                              },
                              "last_name": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "vat_number": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "zip": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "plan"
                        ],
                        "properties": {
                          "plan": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/plan"
                          },
                          "billing_profile": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/billing_profile"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Site",
          "description": "A site represents a specific DatoCMS administrative area",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/site/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/site/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/site/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^site$",
              "example": "site"
            },
            "id": {
              "description": "ID of site",
              "type": "string",
              "example": "155"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "domain",
                "internal_domain",
                "notes",
                "last_data_change_at",
                "access_token",
                "created_at",
                "deactivated"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Site name",
                  "example": "My blog"
                },
                "domain": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Site domain",
                  "example": "admin.foobar.com"
                },
                "internal_domain": {
                  "type": "string",
                  "description": "Internal site domain",
                  "example": "clueless-star-1231.admin.datocms.com"
                },
                "internal_subdomain": {
                  "type": "string",
                  "description": "Internal site subdomain",
                  "example": "clueless-star-1231"
                },
                "notes": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Optional notes regarding the site",
                  "example": "Foo bar"
                },
                "last_data_change_at": {
                  "description": "Specifies the last time when a change of data occurred",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "created_at": {
                  "description": "Date of site creation",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "access_token": {
                  "description": "Access token",
                  "type": "string"
                },
                "readwrite_token": {
                  "description": "Read-write API token",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "readonly_token": {
                  "description": "Read-only API token",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "deactivated": {
                  "description": "Status of site according to billing situation",
                  "type": "boolean"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "active_subscription",
                "active_plan",
                "usage",
                "transfer",
                "owner"
              ],
              "additionalProperties": false,
              "properties": {
                "active_subscription": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/subscription/definitions/data"
                    }
                  }
                },
                "active_plan": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/plan/definitions/data"
                    }
                  }
                },
                "usage": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/subscription_compatibility/definitions/data"
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/account/definitions/data"
                    }
                  }
                },
                "transfer": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/site_transfer/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/site/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/site/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/site/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/site/definitions/relationships"
            }
          }
        },
        "subscription": {
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new subscription",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Fsite%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}/subscriptions",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/subscription/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "recurrence",
                          "extra_packets"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "payment_intent_id": {
                            "type": "string"
                          },
                          "recurrence": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/recurrence"
                          },
                          "extra_packets": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/extra_packets"
                          },
                          "billing_profile": {
                            "type": [
                              "null",
                              "object"
                            ],
                            "required": [
                              "address_line",
                              "city",
                              "country",
                              "email",
                              "first_name",
                              "last_name",
                              "state",
                              "zip"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "address_line": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "company": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "country": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "first_name": {
                                "type": "string"
                              },
                              "last_name": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "vat_number": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "zip": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "plan"
                        ],
                        "properties": {
                          "plan": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/plan"
                          },
                          "billing_profile": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/billing_profile"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/subscription"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/site"
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "simulate",
              "title": "Simulate",
              "description": "Simulate costs for a new subscription",
              "href": "/sites/{(%2Fschemata%2Fsite%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}/subscriptions/simulate",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/subscription/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "recurrence",
                          "extra_packets"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "recurrence": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/recurrence"
                          },
                          "extra_packets": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/extra_packets"
                          },
                          "is_duplicate": {
                            "type": "boolean"
                          },
                          "ignore_content": {
                            "type": "boolean"
                          },
                          "billing_profile": {
                            "type": [
                              "null",
                              "object"
                            ],
                            "required": [
                              "address_line",
                              "city",
                              "country",
                              "zip"
                            ],
                            "properties": {
                              "address_line": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "vat_number": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "zip": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "plan"
                        ],
                        "properties": {
                          "plan": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/plan"
                          },
                          "billing_profile": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/billing_profile"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "required": [
                          "amount_due"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "amount_due": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "validate",
              "title": "Validate a new subscription",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Fsite%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}/subscriptions/validate",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/subscription/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "extra_packets"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "extra_packets": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/extra_packets"
                          },
                          "ignore_content": {
                            "type": "boolean",
                            "description": "Skip compatibility checks on content (number of records and uploads)",
                            "example": true
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "plan"
                        ],
                        "properties": {
                          "plan": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/plan"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/subscription"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/site"
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Subscription",
          "description": "A subscription record",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/subscription/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/subscription/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/subscription/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^subscription$",
              "example": "subscription"
            },
            "id": {
              "description": "ID of subscription",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "created_at",
                "recurrence"
              ],
              "properties": {
                "created_at": {
                  "description": "Date of creation of subscription",
                  "type": [
                    "string"
                  ],
                  "format": "date-time"
                },
                "recurrence": {
                  "type": [
                    "string"
                  ],
                  "enum": [
                    "yearly",
                    "monthly"
                  ],
                  "description": "Type of recurrence (yearly/monthly)",
                  "example": "monthly"
                },
                "price": {
                  "type": "integer"
                },
                "extra_packets": {
                  "type": "object",
                  "description": "Extra packets",
                  "additionalProperties": false,
                  "properties": {
                    "users": {
                      "type": "integer"
                    },
                    "locales": {
                      "type": "integer"
                    },
                    "item_types": {
                      "type": "integer"
                    },
                    "roles": {
                      "type": "integer"
                    },
                    "deployment_environments": {
                      "type": "integer"
                    },
                    "access_tokens": {
                      "type": "integer"
                    }
                  },
                  "example": {
                    "users": 1,
                    "locales": 1,
                    "item_types": 0,
                    "roles": 0,
                    "deployment_environments": 0,
                    "access_tokens": 0
                  }
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "plan"
              ],
              "additionalProperties": false,
              "properties": {
                "plan": {
                  "type": "object",
                  "description": "Subscription plan",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/plan/definitions/data"
                    }
                  }
                },
                "billing_profile": {
                  "type": "object",
                  "description": "Billing profile",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/billing_profile/definitions/data"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "site": {
                  "type": "object",
                  "description": "Subscription site",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/site/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/subscription/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/subscription/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/subscription/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/subscription/definitions/relationships"
            }
          }
        },
        "plan": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Plan",
          "description": "A field represents a plan",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/plan/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/plan/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/plan/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^plan$",
              "example": "plan"
            },
            "id": {
              "description": "ID of plan",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the plan",
                  "example": "Basic"
                },
                "active": {
                  "type": "boolean",
                  "description": "Whether this plan is active or legacy",
                  "example": true
                },
                "custom_domain": {
                  "type": "boolean",
                  "description": "Whether custom domain can be enabled or not",
                  "example": true
                },
                "users": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of users that can be invited",
                  "example": 2
                },
                "indexable_pages": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of indexable pages",
                  "example": 1000
                },
                "deployment_environments": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of deployment environments",
                  "example": 4
                },
                "plugins": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of plugins",
                  "example": 4
                },
                "items": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of records allowed",
                  "example": 5000
                },
                "monthly_price": {
                  "type": "integer",
                  "description": "Monthly price",
                  "example": 19
                },
                "yearly_price": {
                  "type": "integer",
                  "description": "Yearly price",
                  "example": 189
                },
                "uploadable_bytes": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Uploadable bytes",
                  "example": 1073741824
                },
                "traffic_bytes": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Amount of asset data transferred between our Asset CDN and GraphQL Content Delivery API and content consumers",
                  "example": 1073741824
                },
                "api_calls": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "The number of requests made to both our Content Management and Content Delivery APIs",
                  "example": 100000
                },
                "access_tokens": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "The number of different API tokens you can generate, each which different permissions",
                  "example": 10
                },
                "roles": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of roles allowed",
                  "example": 10
                },
                "locales": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of locales allowed",
                  "example": 10
                },
                "item_types": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of models allowed",
                  "example": 25
                },
                "item_locking": {
                  "type": "boolean",
                  "description": "Whether collaboration features are enabled or not",
                  "example": true
                },
                "advanced_media_area": {
                  "type": "boolean",
                  "description": "Whether advanced Media Area is enabled or not",
                  "example": true
                },
                "sso": {
                  "type": "boolean",
                  "description": "Whether Single Sign-On feature is enabled or not",
                  "example": true
                },
                "version_history": {
                  "type": "boolean",
                  "description": "Whether version history can be enabled or not",
                  "example": true
                },
                "otp": {
                  "type": "boolean",
                  "description": "Whether two-factor authentication can be enabled or not",
                  "example": true
                },
                "extra_packets": {
                  "type": "object",
                  "description": "Available extra packets",
                  "additionalProperties": false,
                  "properties": {
                    "users": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "locales": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "item_types": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "roles": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "deployment_environments": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "access_tokens": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "users": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "locales": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "item_types": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "roles": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "deployment_environments": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "access_tokens": {
                      "amount_per_packet": 1,
                      "price": 10
                    }
                  }
                },
                "auto_packets": {
                  "type": "object",
                  "description": "Automatic packets",
                  "additionalProperties": false,
                  "properties": {
                    "traffic_bytes": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "api_calls": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "api_calls": {
                      "amount_per_packet": 250000,
                      "price": 9
                    },
                    "traffic_bytes": {
                      "amount_per_packet": 161061273600,
                      "price": 29
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/plan/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/plan/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/plan/definitions/attributes"
            }
          }
        },
        "billing_profile": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Billing profile",
          "description": "A billing profile",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/billing_profile/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/billing_profile/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/billing_profile/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^billing_profile$",
              "example": "billing_profile"
            },
            "id": {
              "description": "ID of billing_profile",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "full_name",
                "company",
                "card_masked_number"
              ],
              "properties": {
                "full_name": {
                  "description": "Cardholder full name",
                  "type": [
                    "string"
                  ]
                },
                "card_masked_number": {
                  "description": "Card masked number",
                  "type": [
                    "string"
                  ]
                },
                "company": {
                  "description": "Cardholder company name",
                  "type": [
                    "string"
                  ]
                },
                "next_billing_at": {
                  "description": "Date of next billing",
                  "type": [
                    "string"
                  ]
                },
                "is_active": {
                  "description": "Is the billing profile active?",
                  "type": [
                    "boolean"
                  ]
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/billing_profile/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/billing_profile/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/billing_profile/definitions/attributes"
            }
          }
        },
        "site_transfer": {
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all pending transfer requests",
              "description": "",
              "href": "/site-transfers",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/site_transfer"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a transfer",
              "description": "",
              "href": "/site-transfers/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite_transfer%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site_transfer"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/plan"
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new site transfer request",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Fsite%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}/transfer",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/site_transfer/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "account_email": {
                            "$ref": "#/definitions/site_transfer/definitions/attributes/properties/account_email"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/site_transfer"
                    }
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Destroy a site transfer request",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Fsite%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}/transfer",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "simulate_accept",
              "title": "Simulate accept",
              "description": "Simulate costs for accepting a site transfer request",
              "href": "/site-transfers/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite_transfer%2Fdefinitions%2Fidentity)}/simulate-accept",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "id",
                      "type",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "$ref": "#/definitions/site_transfer/properties/id"
                      },
                      "type": {
                        "$ref": "#/definitions/site_transfer/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "billing_profile": {
                            "type": [
                              "null",
                              "object"
                            ],
                            "required": [
                              "address_line",
                              "city",
                              "country",
                              "zip"
                            ],
                            "properties": {
                              "address_line": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "vat_number": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "zip": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "relationships": {
                        "description": "JSON API links",
                        "type": "object",
                        "required": [
                          "billing_profile"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "billing_profile": {
                            "type": "object",
                            "description": "Billing profile",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "anyOf": [
                                  {
                                    "$ref": "#/definitions/billing_profile/definitions/data"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "required": [
                          "amount_due"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "amount_due": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "accept",
              "title": "Accept a site transfer request",
              "description": "",
              "href": "/site-transfers/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite_transfer%2Fdefinitions%2Fidentity)}/accept",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "id",
                      "type",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "$ref": "#/definitions/site_transfer/properties/id"
                      },
                      "type": {
                        "$ref": "#/definitions/site_transfer/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "payment_intent_id": {
                            "type": "string"
                          },
                          "billing_profile": {
                            "type": [
                              "null",
                              "object"
                            ],
                            "required": [
                              "address_line",
                              "city",
                              "country",
                              "email",
                              "first_name",
                              "last_name",
                              "state",
                              "zip"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "address_line": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "company": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "country": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "first_name": {
                                "type": "string"
                              },
                              "last_name": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "vat_number": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "zip": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "relationships": {
                        "description": "JSON API links",
                        "type": "object",
                        "required": [
                          "billing_profile"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "billing_profile": {
                            "type": "object",
                            "description": "Billing profile",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "anyOf": [
                                  {
                                    "$ref": "#/definitions/billing_profile/definitions/data"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "decline",
              "title": "Decline a site transfer request",
              "description": "",
              "href": "/site-transfers/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite_transfer%2Fdefinitions%2Fidentity)}/decline"
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Site transfer request",
          "description": "A request to transfer a site to another account",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/site_transfer/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/site_transfer/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/site_transfer/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^site_transfer$",
              "example": "site_transfer"
            },
            "id": {
              "description": "ID of site_transfer",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "source_account_email",
                "account_email",
                "site_name",
                "extra_packets"
              ],
              "properties": {
                "source_account_email": {
                  "description": "Email of the source account",
                  "type": [
                    "string"
                  ]
                },
                "account_email": {
                  "description": "Email of the destination account",
                  "type": [
                    "string"
                  ]
                },
                "site_name": {
                  "description": "Name of the site to transfer",
                  "type": [
                    "string"
                  ]
                },
                "recurrence": {
                  "$ref": "#/definitions/subscription/definitions/attributes/properties/recurrence"
                },
                "extra_packets": {
                  "type": "object",
                  "description": "Extra packets",
                  "additionalProperties": false,
                  "properties": {
                    "users": {
                      "type": "integer"
                    },
                    "locales": {
                      "type": "integer"
                    },
                    "item_types": {
                      "type": "integer"
                    },
                    "roles": {
                      "type": "integer"
                    },
                    "deployment_environments": {
                      "type": "integer"
                    },
                    "access_tokens": {
                      "type": "integer"
                    }
                  },
                  "example": {
                    "users": 1,
                    "locales": 1,
                    "item_types": 0,
                    "roles": 0,
                    "deployment_environments": 0,
                    "access_tokens": 0
                  }
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "plan"
              ],
              "additionalProperties": false,
              "properties": {
                "plan": {
                  "type": "object",
                  "description": "Current plan",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/plan/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/site_transfer/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/site_transfer/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/site_transfer/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/site_transfer/definitions/relationships"
            }
          }
        },
        "site_invitation": {
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Site invitation",
          "description": "Site invitation",
          "type": "object",
          "required": [
            "id"
          ],
          "additionalProperties": false,
          "token": {
            "description": "Token of invitation",
            "type": "string",
            "example": "XXXXXXXXX"
          },
          "definitions": {
            "identity": {
              "$ref": "#/definitions/site_invitation/properties/id"
            },
            "id": {
              "description": "ID of site invitation",
              "type": "string",
              "example": "4235"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^site_invitation$",
              "example": "site_invitation"
            }
          },
          "properties": {
            "id": {
              "$ref": "#/definitions/site_invitation/definitions/id"
            },
            "type": {
              "$ref": "#/definitions/site_invitation/definitions/type"
            }
          },
          "links": [
            {
              "method": "PUT",
              "rel": "redeem",
              "title": "Redeem token",
              "description": "",
              "href": "/site_invitations/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite_invitation%2Ftoken)}/redeem",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            }
          ]
        },
        "subscription_compatibility": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Subscription compatibility",
          "description": "",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/subscription_compatibility/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/subscription_compatibility/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/subscription_compatibility/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^subscription_compatibility$",
              "example": "subscription_compatibility"
            },
            "id": {
              "description": "ID of subscription compatibility",
              "type": "string",
              "example": "4235"
            },
            "analysis": {
              "type": "object",
              "description": "Analysis",
              "properties": {
                "current_usage": {
                  "type": [
                    "boolean",
                    "integer"
                  ]
                },
                "plan_limit": {
                  "type": [
                    "boolean",
                    "integer"
                  ]
                },
                "compatible": {
                  "type": "boolean"
                },
                "compatible_with_extra_charges": {
                  "type": "boolean"
                }
              }
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "limits",
                "compatible",
                "compatible_with_extra_charges",
                "incompatible_limits",
                "users_analysis",
                "roles_analysis",
                "item_types_analysis",
                "locales_analysis",
                "indexable_pages_analysis",
                "version_history_analysis",
                "items_analysis",
                "uploadable_bytes_analysis",
                "custom_domain_analysis",
                "otp_analysis"
              ],
              "additionalProperties": false,
              "properties": {
                "limits": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "incompatible_limits": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "compatible": {
                  "type": "boolean"
                },
                "compatible_with_extra_charges": {
                  "type": "boolean"
                },
                "users_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "roles_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "item_types_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "locales_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "indexable_pages_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "version_history_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "items_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "uploadable_bytes_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "custom_domain_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "otp_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "sso_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "item_locking_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "advanced_media_area_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "plan"
              ],
              "additionalProperties": false,
              "properties": {
                "plan": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/plan/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/subscription_compatibility/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/subscription_compatibility/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/subscription_compatibility/definitions/attributes"
            }
          }
        },
        "job": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Asyncronous job",
          "description": "",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/job/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/job/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/job/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^job$",
              "example": "job"
            },
            "id": {
              "description": "ID of job",
              "type": "string",
              "example": "4235"
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/job/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/job/definitions/id"
            }
          }
        },
        "oauth_application": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "OAuth application",
          "description": "An OAuth application that allows access to our API from third party services.",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/oauth_application/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/oauth_application/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/oauth_application/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^oauth_application$",
              "example": "oauth_application"
            },
            "id": {
              "description": "ID of access_token",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "created_at"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of application",
                  "example": "Netlify OAuth application"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date of token creation",
                  "example": "2018-11-20 12:06:49.803166"
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/oauth_application/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/oauth_application/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/oauth_application/definitions/attributes"
            }
          }
        },
        "job_result": {
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a job result",
              "description": "",
              "href": "/job-results/{(%2Fschemata%2Fjob_result%23%2Fdefinitions%2Fjob_result%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job_result"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Job result",
          "description": "Some API endpoint give results asyncronously, returning the ID of a job",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/job_result/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/job_result/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/job_result/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^job_result$",
              "example": "job_result"
            },
            "id": {
              "description": "ID of job result",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "status",
                "payload"
              ],
              "additionalProperties": false,
              "properties": {
                "status": {
                  "type": "integer",
                  "description": "Status of delayed HTTP response",
                  "example": 200
                },
                "payload": {
                  "type": [
                    "null",
                    "object"
                  ],
                  "description": "JSON API response of the HTTP request",
                  "example": {
                    "data": {
                      "id": 999,
                      "type": "item_type",
                      "attributes": {
                        "some": "attributes"
                      }
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/job_result/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/job_result/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/job_result/definitions/attributes"
            }
          }
        }
      }
    },
    "rawHeaders": [
      "Last-Modified",
      "Sat, 05 Oct 2019 20:09:06 GMT",
      "Content-Type",
      "application/json",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Content-Length",
      "100288"
    ]
  },
  {
    "scope": "http://account-api.lvh.me:3001",
    "method": "POST",
    "path": "/account",
    "body": {
      "data": {
        "type": "account",
        "attributes": {
          "email": "yajef@example.com",
          "company": "DatoCMS",
          "password": "STRONG_pass123!"
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002b1b995d0003",
      "7c8f6d4fc2301485ff4b3ff80979190391c468c378d9a4420288ce18722d452e74ddb276e020fc773ba3316a6293a627f73e3de7de23598201d23e125c92361179b07ee9731c61e0cf0e7eed0e83cbb22d3afe267e1b7682a478d9b468ec31ccfda6bff1f76cba356c4a0df3c219f368931db8bddd8c79fc707ba0f96843f7beaa96dd47b9ab3e2c1a186d9b6ba735abb5285314dc1e9ecfe634dd0df27a38a95ec4bdb94b4ac4e489b01369a135c6ca165221c158a9d798e86262e03cce9429e48f256a35a7d1fc76f8c24ef694082a2eb3a5b0dcd3ff7889803129be64467ca4890850da7e0e1bb1ba116f10255294791c597285a9360b0591355099942522e157c18209a8dc1a7860e20e9bd86f491aefb0d80ed5ebc259c1224bd102b1492033eb76a562acac7cf2ed3fc1d75af05498abf1a07ec79cd00bfb743272fbb4d30bfcfb46d7ab3b7d77381f8ecf50eb4ca457dfc1a83fe2801bdcd9095720b5389d9e4fef000000ffff",
      "03004046c7fe0e020000"
    ],
    "rawHeaders": [
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "28",
      "ETag",
      "W/\"a2d1041f9a9390ea6440898e29887658\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "075d94dc-1b63-401b-8dd7-02d4fa665f6b",
      "X-Runtime",
      "0.243808",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://account-api.lvh.me:3001",
    "method": "GET",
    "path": "/docs/account-api-hyperschema.json",
    "body": "",
    "status": 200,
    "response": {
      "$schema": "http://interagent.github.io/interagent-hyper-schema",
      "title": "DatoCMS Account API",
      "description": "",
      "type": "object",
      "id": "dato-api",
      "links": [
        {
          "href": "https://account-api.datocms.com",
          "rel": "self"
        }
      ],
      "properties": {
        "session": {
          "$ref": "#/definitions/session"
        },
        "account": {
          "$ref": "#/definitions/account"
        },
        "site": {
          "$ref": "#/definitions/site"
        },
        "subscription": {
          "$ref": "#/definitions/subscription"
        },
        "plan": {
          "$ref": "#/definitions/plan"
        },
        "job_result": {
          "$ref": "#/definitions/job_result"
        },
        "site_transfer": {
          "$ref": "#/definitions/site_transfer"
        },
        "site_invitation": {
          "$ref": "#/definitions/site_invitation"
        },
        "subscription_compatibility": {
          "$ref": "#/definitions/subscription_compatibility"
        },
        "job": {
          "$ref": "#/definitions/job"
        },
        "oauth_application": {
          "$ref": "#/definitions/oauth_application"
        }
      },
      "definitions": {
        "session": {
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new session",
              "description": "",
              "href": "/sessions",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "anyOf": [
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "attributes"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type field",
                            "pattern": "^email_credentials$",
                            "example": "email_credentials"
                          },
                          "attributes": {
                            "description": "JSON API attributes",
                            "type": "object",
                            "required": [
                              "email",
                              "password"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "email": {
                                "type": "string",
                                "description": "Email",
                                "example": "foo@bar.com"
                              },
                              "password": {
                                "type": "string",
                                "description": "Password",
                                "example": "changeme"
                              },
                              "otp_code": {
                                "type": "string",
                                "description": "Two-factor authentication one-time password",
                                "example": "123512"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "attributes"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type field",
                            "pattern": "^password_reset$",
                            "example": "password_reset"
                          },
                          "attributes": {
                            "description": "JSON API attributes",
                            "type": "object",
                            "required": [
                              "token",
                              "password"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "token": {
                                "type": "string",
                                "description": "Invitation token",
                                "example": "XXXYYYZZZ"
                              },
                              "password": {
                                "type": "string",
                                "description": "Password",
                                "example": "changeme"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/session"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/account"
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Session",
          "description": "A session is required to access to read-and-write API endpoints",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/session/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/session/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/session/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^session$",
              "example": "session"
            },
            "id": {
              "description": "JSON web token for the session",
              "type": "string",
              "example": "eyJCJhbGci.eyJhaWwuY29tIn0.32wQOMci"
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "account"
              ],
              "additionalProperties": false,
              "properties": {
                "account": {
                  "type": "object",
                  "description": "The account associated with the session",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/account/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/session/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/session/definitions/id"
            },
            "relationships": {
              "$ref": "#/definitions/session/definitions/relationships"
            }
          }
        },
        "account": {
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new account",
              "description": "",
              "href": "/account",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/account/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "email",
                          "password"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "email": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/email"
                          },
                          "first_name": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/first_name"
                          },
                          "last_name": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/last_name"
                          },
                          "company": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/company"
                          },
                          "password": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/password"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/session"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/account"
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a account",
              "description": "",
              "href": "/account",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/account/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/account/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "email": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/email"
                          },
                          "first_name": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/first_name"
                          },
                          "last_name": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/last_name"
                          },
                          "company": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/company"
                          },
                          "password": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/password"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/session"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/account"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a account",
              "description": "",
              "href": "/account",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "reset_password",
              "title": "Request a password reset",
              "description": "",
              "href": "/account/reset_password",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/account/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "email"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "email": {
                            "$ref": "#/definitions/account/definitions/attributes/properties/email"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "activate_2fa",
              "title": "Activates 2-factor authorization",
              "description": "",
              "href": "/account/activate-2fa",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "description": "JSON API type field",
                        "type": [
                          "string"
                        ],
                        "pattern": "^2fa_activation$",
                        "example": "2fa_activation"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "otp_code"
                        ],
                        "properties": {
                          "otp_code": {
                            "type": "string",
                            "description": "OTP code",
                            "example": "123 456"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Account",
          "description": "DatoCMS account",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/account/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/account/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/account/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^account$",
              "example": "account"
            },
            "id": {
              "description": "ID of account",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "email",
                "company"
              ],
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email",
                  "example": "foo@bar.com"
                },
                "first_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "First name",
                  "example": "Mark"
                },
                "last_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Last name",
                  "example": "Smith"
                },
                "company": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Company name",
                  "example": "Dundler Mifflin"
                },
                "password": {
                  "type": "string",
                  "description": "Password"
                },
                "api_token": {
                  "type": "string",
                  "description": "API token"
                },
                "is_2fa_active": {
                  "type": "boolean",
                  "description": "Whether 2-factor authentication is active for this account or not"
                },
                "provisioning_2fa_uri": {
                  "type": "string",
                  "description": "2-factor authentication provisioning URI"
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/account/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/account/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/account/definitions/attributes"
            }
          }
        },
        "site": {
          "links": [
            {
              "rel": "self",
              "method": "GET",
              "title": "Retrieve a site",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all sites",
              "description": "",
              "href": "/sites",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "meta"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/site"
                    }
                  },
                  "meta": {
                    "type": "object"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new site",
              "description": "",
              "href": "/sites",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/site/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/name"
                          },
                          "internal_subdomain": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/internal_subdomain"
                          },
                          "domain": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/domain"
                          },
                          "notes": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/notes"
                          },
                          "template": {
                            "description": "Site template",
                            "type": [
                              "string",
                              "null"
                            ],
                            "example": "portfolio"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a new site",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "id",
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "$ref": "#/definitions/site/definitions/id"
                      },
                      "type": {
                        "$ref": "#/definitions/site/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/name"
                          },
                          "domain": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/domain"
                          },
                          "internal_subdomain": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/internal_subdomain"
                          },
                          "notes": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/notes"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a site",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "duplicate",
              "title": "Duplicate an existing site",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}/duplicate",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/site/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "name",
                          "recurrence",
                          "extra_packets"
                        ],
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/name"
                          },
                          "ignore_content": {
                            "type": "boolean",
                            "description": "When duplicating a site it allows to duplicate only the schema",
                            "example": true
                          },
                          "payment_intent_id": {
                            "type": "string"
                          },
                          "recurrence": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/recurrence"
                          },
                          "extra_packets": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/extra_packets"
                          },
                          "billing_profile": {
                            "type": [
                              "null",
                              "object"
                            ],
                            "required": [
                              "address_line",
                              "city",
                              "country",
                              "email",
                              "first_name",
                              "last_name",
                              "state",
                              "zip"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "address_line": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "company": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "country": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "first_name": {
                                "type": "string"
                              },
                              "last_name": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "vat_number": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "zip": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "plan"
                        ],
                        "properties": {
                          "plan": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/plan"
                          },
                          "billing_profile": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/billing_profile"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Site",
          "description": "A site represents a specific DatoCMS administrative area",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/site/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/site/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/site/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^site$",
              "example": "site"
            },
            "id": {
              "description": "ID of site",
              "type": "string",
              "example": "155"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "domain",
                "internal_domain",
                "notes",
                "last_data_change_at",
                "access_token",
                "created_at",
                "deactivated"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Site name",
                  "example": "My blog"
                },
                "domain": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Site domain",
                  "example": "admin.foobar.com"
                },
                "internal_domain": {
                  "type": "string",
                  "description": "Internal site domain",
                  "example": "clueless-star-1231.admin.datocms.com"
                },
                "internal_subdomain": {
                  "type": "string",
                  "description": "Internal site subdomain",
                  "example": "clueless-star-1231"
                },
                "notes": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Optional notes regarding the site",
                  "example": "Foo bar"
                },
                "last_data_change_at": {
                  "description": "Specifies the last time when a change of data occurred",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "created_at": {
                  "description": "Date of site creation",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "access_token": {
                  "description": "Access token",
                  "type": "string"
                },
                "readwrite_token": {
                  "description": "Read-write API token",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "readonly_token": {
                  "description": "Read-only API token",
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "deactivated": {
                  "description": "Status of site according to billing situation",
                  "type": "boolean"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "active_subscription",
                "active_plan",
                "usage",
                "transfer",
                "owner"
              ],
              "additionalProperties": false,
              "properties": {
                "active_subscription": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/subscription/definitions/data"
                    }
                  }
                },
                "active_plan": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/plan/definitions/data"
                    }
                  }
                },
                "usage": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/subscription_compatibility/definitions/data"
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/account/definitions/data"
                    }
                  }
                },
                "transfer": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/site_transfer/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/site/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/site/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/site/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/site/definitions/relationships"
            }
          }
        },
        "subscription": {
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new subscription",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Fsite%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}/subscriptions",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/subscription/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "recurrence",
                          "extra_packets"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "payment_intent_id": {
                            "type": "string"
                          },
                          "recurrence": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/recurrence"
                          },
                          "extra_packets": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/extra_packets"
                          },
                          "billing_profile": {
                            "type": [
                              "null",
                              "object"
                            ],
                            "required": [
                              "address_line",
                              "city",
                              "country",
                              "email",
                              "first_name",
                              "last_name",
                              "state",
                              "zip"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "address_line": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "company": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "country": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "first_name": {
                                "type": "string"
                              },
                              "last_name": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "vat_number": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "zip": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "plan"
                        ],
                        "properties": {
                          "plan": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/plan"
                          },
                          "billing_profile": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/billing_profile"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/subscription"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/site"
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "simulate",
              "title": "Simulate",
              "description": "Simulate costs for a new subscription",
              "href": "/sites/{(%2Fschemata%2Fsite%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}/subscriptions/simulate",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/subscription/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "recurrence",
                          "extra_packets"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "recurrence": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/recurrence"
                          },
                          "extra_packets": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/extra_packets"
                          },
                          "is_duplicate": {
                            "type": "boolean"
                          },
                          "ignore_content": {
                            "type": "boolean"
                          },
                          "billing_profile": {
                            "type": [
                              "null",
                              "object"
                            ],
                            "required": [
                              "address_line",
                              "city",
                              "country",
                              "zip"
                            ],
                            "properties": {
                              "address_line": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "vat_number": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "zip": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "plan"
                        ],
                        "properties": {
                          "plan": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/plan"
                          },
                          "billing_profile": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/billing_profile"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "required": [
                          "amount_due"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "amount_due": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "validate",
              "title": "Validate a new subscription",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Fsite%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}/subscriptions/validate",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/subscription/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "extra_packets"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "extra_packets": {
                            "$ref": "#/definitions/subscription/definitions/attributes/properties/extra_packets"
                          },
                          "ignore_content": {
                            "type": "boolean",
                            "description": "Skip compatibility checks on content (number of records and uploads)",
                            "example": true
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "plan"
                        ],
                        "properties": {
                          "plan": {
                            "$ref": "#/definitions/subscription/definitions/relationships/properties/plan"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/subscription"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/site"
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Subscription",
          "description": "A subscription record",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/subscription/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/subscription/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/subscription/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^subscription$",
              "example": "subscription"
            },
            "id": {
              "description": "ID of subscription",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "created_at",
                "recurrence"
              ],
              "properties": {
                "created_at": {
                  "description": "Date of creation of subscription",
                  "type": [
                    "string"
                  ],
                  "format": "date-time"
                },
                "recurrence": {
                  "type": [
                    "string"
                  ],
                  "enum": [
                    "yearly",
                    "monthly"
                  ],
                  "description": "Type of recurrence (yearly/monthly)",
                  "example": "monthly"
                },
                "price": {
                  "type": "integer"
                },
                "extra_packets": {
                  "type": "object",
                  "description": "Extra packets",
                  "additionalProperties": false,
                  "properties": {
                    "users": {
                      "type": "integer"
                    },
                    "locales": {
                      "type": "integer"
                    },
                    "item_types": {
                      "type": "integer"
                    },
                    "roles": {
                      "type": "integer"
                    },
                    "deployment_environments": {
                      "type": "integer"
                    },
                    "access_tokens": {
                      "type": "integer"
                    }
                  },
                  "example": {
                    "users": 1,
                    "locales": 1,
                    "item_types": 0,
                    "roles": 0,
                    "deployment_environments": 0,
                    "access_tokens": 0
                  }
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "plan"
              ],
              "additionalProperties": false,
              "properties": {
                "plan": {
                  "type": "object",
                  "description": "Subscription plan",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/plan/definitions/data"
                    }
                  }
                },
                "billing_profile": {
                  "type": "object",
                  "description": "Billing profile",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/billing_profile/definitions/data"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "site": {
                  "type": "object",
                  "description": "Subscription site",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/site/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/subscription/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/subscription/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/subscription/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/subscription/definitions/relationships"
            }
          }
        },
        "plan": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Plan",
          "description": "A field represents a plan",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/plan/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/plan/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/plan/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^plan$",
              "example": "plan"
            },
            "id": {
              "description": "ID of plan",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the plan",
                  "example": "Basic"
                },
                "active": {
                  "type": "boolean",
                  "description": "Whether this plan is active or legacy",
                  "example": true
                },
                "custom_domain": {
                  "type": "boolean",
                  "description": "Whether custom domain can be enabled or not",
                  "example": true
                },
                "users": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of users that can be invited",
                  "example": 2
                },
                "indexable_pages": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of indexable pages",
                  "example": 1000
                },
                "deployment_environments": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of deployment environments",
                  "example": 4
                },
                "plugins": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of plugins",
                  "example": 4
                },
                "items": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of records allowed",
                  "example": 5000
                },
                "monthly_price": {
                  "type": "integer",
                  "description": "Monthly price",
                  "example": 19
                },
                "yearly_price": {
                  "type": "integer",
                  "description": "Yearly price",
                  "example": 189
                },
                "uploadable_bytes": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Uploadable bytes",
                  "example": 1073741824
                },
                "traffic_bytes": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Amount of asset data transferred between our Asset CDN and GraphQL Content Delivery API and content consumers",
                  "example": 1073741824
                },
                "api_calls": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "The number of requests made to both our Content Management and Content Delivery APIs",
                  "example": 100000
                },
                "access_tokens": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "The number of different API tokens you can generate, each which different permissions",
                  "example": 10
                },
                "roles": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of roles allowed",
                  "example": 10
                },
                "locales": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of locales allowed",
                  "example": 10
                },
                "item_types": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of models allowed",
                  "example": 25
                },
                "item_locking": {
                  "type": "boolean",
                  "description": "Whether collaboration features are enabled or not",
                  "example": true
                },
                "advanced_media_area": {
                  "type": "boolean",
                  "description": "Whether advanced Media Area is enabled or not",
                  "example": true
                },
                "sso": {
                  "type": "boolean",
                  "description": "Whether Single Sign-On feature is enabled or not",
                  "example": true
                },
                "version_history": {
                  "type": "boolean",
                  "description": "Whether version history can be enabled or not",
                  "example": true
                },
                "otp": {
                  "type": "boolean",
                  "description": "Whether two-factor authentication can be enabled or not",
                  "example": true
                },
                "extra_packets": {
                  "type": "object",
                  "description": "Available extra packets",
                  "additionalProperties": false,
                  "properties": {
                    "users": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "locales": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "item_types": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "roles": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "deployment_environments": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "access_tokens": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "users": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "locales": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "item_types": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "roles": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "deployment_environments": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "access_tokens": {
                      "amount_per_packet": 1,
                      "price": 10
                    }
                  }
                },
                "auto_packets": {
                  "type": "object",
                  "description": "Automatic packets",
                  "additionalProperties": false,
                  "properties": {
                    "traffic_bytes": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "api_calls": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "api_calls": {
                      "amount_per_packet": 250000,
                      "price": 9
                    },
                    "traffic_bytes": {
                      "amount_per_packet": 161061273600,
                      "price": 29
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/plan/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/plan/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/plan/definitions/attributes"
            }
          }
        },
        "billing_profile": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Billing profile",
          "description": "A billing profile",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/billing_profile/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/billing_profile/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/billing_profile/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^billing_profile$",
              "example": "billing_profile"
            },
            "id": {
              "description": "ID of billing_profile",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "full_name",
                "company",
                "card_masked_number"
              ],
              "properties": {
                "full_name": {
                  "description": "Cardholder full name",
                  "type": [
                    "string"
                  ]
                },
                "card_masked_number": {
                  "description": "Card masked number",
                  "type": [
                    "string"
                  ]
                },
                "company": {
                  "description": "Cardholder company name",
                  "type": [
                    "string"
                  ]
                },
                "next_billing_at": {
                  "description": "Date of next billing",
                  "type": [
                    "string"
                  ]
                },
                "is_active": {
                  "description": "Is the billing profile active?",
                  "type": [
                    "boolean"
                  ]
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/billing_profile/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/billing_profile/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/billing_profile/definitions/attributes"
            }
          }
        },
        "site_transfer": {
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all pending transfer requests",
              "description": "",
              "href": "/site-transfers",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/site_transfer"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a transfer",
              "description": "",
              "href": "/site-transfers/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite_transfer%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site_transfer"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/plan"
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new site transfer request",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Fsite%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}/transfer",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/site_transfer/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "account_email": {
                            "$ref": "#/definitions/site_transfer/definitions/attributes/properties/account_email"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/site_transfer"
                    }
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Destroy a site transfer request",
              "description": "",
              "href": "/sites/{(%2Fschemata%2Fsite%23%2Fdefinitions%2Fsite%2Fdefinitions%2Fidentity)}/transfer",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "simulate_accept",
              "title": "Simulate accept",
              "description": "Simulate costs for accepting a site transfer request",
              "href": "/site-transfers/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite_transfer%2Fdefinitions%2Fidentity)}/simulate-accept",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "id",
                      "type",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "$ref": "#/definitions/site_transfer/properties/id"
                      },
                      "type": {
                        "$ref": "#/definitions/site_transfer/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "billing_profile": {
                            "type": [
                              "null",
                              "object"
                            ],
                            "required": [
                              "address_line",
                              "city",
                              "country",
                              "zip"
                            ],
                            "properties": {
                              "address_line": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "vat_number": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "zip": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "relationships": {
                        "description": "JSON API links",
                        "type": "object",
                        "required": [
                          "billing_profile"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "billing_profile": {
                            "type": "object",
                            "description": "Billing profile",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "anyOf": [
                                  {
                                    "$ref": "#/definitions/billing_profile/definitions/data"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "type": "object",
                        "required": [
                          "amount_due"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "amount_due": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "accept",
              "title": "Accept a site transfer request",
              "description": "",
              "href": "/site-transfers/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite_transfer%2Fdefinitions%2Fidentity)}/accept",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "id",
                      "type",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "$ref": "#/definitions/site_transfer/properties/id"
                      },
                      "type": {
                        "$ref": "#/definitions/site_transfer/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "payment_intent_id": {
                            "type": "string"
                          },
                          "billing_profile": {
                            "type": [
                              "null",
                              "object"
                            ],
                            "required": [
                              "address_line",
                              "city",
                              "country",
                              "email",
                              "first_name",
                              "last_name",
                              "state",
                              "zip"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "address_line": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "company": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "country": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "first_name": {
                                "type": "string"
                              },
                              "last_name": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "vat_number": {
                                "type": [
                                  "null",
                                  "string"
                                ]
                              },
                              "zip": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "relationships": {
                        "description": "JSON API links",
                        "type": "object",
                        "required": [
                          "billing_profile"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "billing_profile": {
                            "type": "object",
                            "description": "Billing profile",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "anyOf": [
                                  {
                                    "$ref": "#/definitions/billing_profile/definitions/data"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "decline",
              "title": "Decline a site transfer request",
              "description": "",
              "href": "/site-transfers/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite_transfer%2Fdefinitions%2Fidentity)}/decline"
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Site transfer request",
          "description": "A request to transfer a site to another account",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/site_transfer/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/site_transfer/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/site_transfer/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^site_transfer$",
              "example": "site_transfer"
            },
            "id": {
              "description": "ID of site_transfer",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "source_account_email",
                "account_email",
                "site_name",
                "extra_packets"
              ],
              "properties": {
                "source_account_email": {
                  "description": "Email of the source account",
                  "type": [
                    "string"
                  ]
                },
                "account_email": {
                  "description": "Email of the destination account",
                  "type": [
                    "string"
                  ]
                },
                "site_name": {
                  "description": "Name of the site to transfer",
                  "type": [
                    "string"
                  ]
                },
                "recurrence": {
                  "$ref": "#/definitions/subscription/definitions/attributes/properties/recurrence"
                },
                "extra_packets": {
                  "type": "object",
                  "description": "Extra packets",
                  "additionalProperties": false,
                  "properties": {
                    "users": {
                      "type": "integer"
                    },
                    "locales": {
                      "type": "integer"
                    },
                    "item_types": {
                      "type": "integer"
                    },
                    "roles": {
                      "type": "integer"
                    },
                    "deployment_environments": {
                      "type": "integer"
                    },
                    "access_tokens": {
                      "type": "integer"
                    }
                  },
                  "example": {
                    "users": 1,
                    "locales": 1,
                    "item_types": 0,
                    "roles": 0,
                    "deployment_environments": 0,
                    "access_tokens": 0
                  }
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "plan"
              ],
              "additionalProperties": false,
              "properties": {
                "plan": {
                  "type": "object",
                  "description": "Current plan",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/plan/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/site_transfer/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/site_transfer/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/site_transfer/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/site_transfer/definitions/relationships"
            }
          }
        },
        "site_invitation": {
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Site invitation",
          "description": "Site invitation",
          "type": "object",
          "required": [
            "id"
          ],
          "additionalProperties": false,
          "token": {
            "description": "Token of invitation",
            "type": "string",
            "example": "XXXXXXXXX"
          },
          "definitions": {
            "identity": {
              "$ref": "#/definitions/site_invitation/properties/id"
            },
            "id": {
              "description": "ID of site invitation",
              "type": "string",
              "example": "4235"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^site_invitation$",
              "example": "site_invitation"
            }
          },
          "properties": {
            "id": {
              "$ref": "#/definitions/site_invitation/definitions/id"
            },
            "type": {
              "$ref": "#/definitions/site_invitation/definitions/type"
            }
          },
          "links": [
            {
              "method": "PUT",
              "rel": "redeem",
              "title": "Redeem token",
              "description": "",
              "href": "/site_invitations/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Fsite_invitation%2Ftoken)}/redeem",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            }
          ]
        },
        "subscription_compatibility": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Subscription compatibility",
          "description": "",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/subscription_compatibility/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/subscription_compatibility/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/subscription_compatibility/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^subscription_compatibility$",
              "example": "subscription_compatibility"
            },
            "id": {
              "description": "ID of subscription compatibility",
              "type": "string",
              "example": "4235"
            },
            "analysis": {
              "type": "object",
              "description": "Analysis",
              "properties": {
                "current_usage": {
                  "type": [
                    "boolean",
                    "integer"
                  ]
                },
                "plan_limit": {
                  "type": [
                    "boolean",
                    "integer"
                  ]
                },
                "compatible": {
                  "type": "boolean"
                },
                "compatible_with_extra_charges": {
                  "type": "boolean"
                }
              }
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "limits",
                "compatible",
                "compatible_with_extra_charges",
                "incompatible_limits",
                "users_analysis",
                "roles_analysis",
                "item_types_analysis",
                "locales_analysis",
                "indexable_pages_analysis",
                "version_history_analysis",
                "items_analysis",
                "uploadable_bytes_analysis",
                "custom_domain_analysis",
                "otp_analysis"
              ],
              "additionalProperties": false,
              "properties": {
                "limits": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "incompatible_limits": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "compatible": {
                  "type": "boolean"
                },
                "compatible_with_extra_charges": {
                  "type": "boolean"
                },
                "users_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "roles_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "item_types_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "locales_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "indexable_pages_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "version_history_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "items_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "uploadable_bytes_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "custom_domain_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "otp_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "sso_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "item_locking_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "advanced_media_area_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "plan"
              ],
              "additionalProperties": false,
              "properties": {
                "plan": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/plan/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/subscription_compatibility/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/subscription_compatibility/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/subscription_compatibility/definitions/attributes"
            }
          }
        },
        "job": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Asyncronous job",
          "description": "",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/job/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/job/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/job/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^job$",
              "example": "job"
            },
            "id": {
              "description": "ID of job",
              "type": "string",
              "example": "4235"
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/job/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/job/definitions/id"
            }
          }
        },
        "oauth_application": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "OAuth application",
          "description": "An OAuth application that allows access to our API from third party services.",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/oauth_application/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/oauth_application/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/oauth_application/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^oauth_application$",
              "example": "oauth_application"
            },
            "id": {
              "description": "ID of access_token",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "created_at"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of application",
                  "example": "Netlify OAuth application"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date of token creation",
                  "example": "2018-11-20 12:06:49.803166"
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/oauth_application/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/oauth_application/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/oauth_application/definitions/attributes"
            }
          }
        },
        "job_result": {
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a job result",
              "description": "",
              "href": "/job-results/{(%2Fschemata%2Fjob_result%23%2Fdefinitions%2Fjob_result%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job_result"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Job result",
          "description": "Some API endpoint give results asyncronously, returning the ID of a job",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/job_result/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/job_result/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/job_result/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^job_result$",
              "example": "job_result"
            },
            "id": {
              "description": "ID of job result",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "status",
                "payload"
              ],
              "additionalProperties": false,
              "properties": {
                "status": {
                  "type": "integer",
                  "description": "Status of delayed HTTP response",
                  "example": 200
                },
                "payload": {
                  "type": [
                    "null",
                    "object"
                  ],
                  "description": "JSON API response of the HTTP request",
                  "example": {
                    "data": {
                      "id": 999,
                      "type": "item_type",
                      "attributes": {
                        "some": "attributes"
                      }
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/job_result/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/job_result/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/job_result/definitions/attributes"
            }
          }
        }
      }
    },
    "rawHeaders": [
      "Last-Modified",
      "Sat, 05 Oct 2019 20:09:06 GMT",
      "Content-Type",
      "application/json",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Content-Length",
      "100288"
    ]
  },
  {
    "scope": "http://account-api.lvh.me:3001",
    "method": "POST",
    "path": "/sites",
    "body": {
      "data": {
        "type": "site",
        "attributes": {
          "name": "Integration new test site"
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002b1b995d0003",
      "8c53db8e9b3014fc9588e7806c08d737dab02dd925db6ad9aac90b32c624ce8289b0294b56f9f7da3469e845554108f99c9939f668fca61548202d78d368a1051a745ce068734d0c4722979c0a2257488896e69d205c0119aa552f6682ec5a2468c3668cf433d915b30ba1686a449916b0aeaae61a95c896a12ae35d7eed8cc50b5d97745dd17545d7a127152ac445a6b696e13d623b922121492680be0e810eecd43403cb0d2c68401f6e258135e3f67e4c441813ce33d1bc10358b0cab7dfe01d347ba8a9f4f315cd3956fc8a2191f9ad787f7ab93faaf0fb85fd39ea2a7d849d26858a71b1eb3cf8ab48f657d3bc44e7c88fb247d11491a8a64b97d4e96a1939cb0fca24ed6e1fd291c1e0f611f3360d4e1d7bb4fbb08bd463659be5bafa2655a6fbab2bc8b58566dbeecf9fd4363ed3eda4fcb449b78f45f0619a8a82933a43f0daeb9819b5a4ae09620418a7f38655bca29092bfa560afdf4c7c66699e7fec2b7a08700284cd7723cb7744de0b8be77a134ac1a6e0cc73231b44dd35d9484f839f0ecc2019e93bbc002964a004158d06f6a435a50a28a93b392a9c6f3f03d3d8e511a3144e582e3961e554f957f8da4b7f0ec4924a7d8f3797ed53856e82fdc1b6fec2b7cc7d18efc89d4c1e4fdfd1a4c6666d2eca33c454e2b2a865151b488f192b437519542d9687a36ad5e4741d39e88cbac361d1352493edf010000ffff",
      "03002e200d718f030000"
    ],
    "rawHeaders": [
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "26",
      "ETag",
      "W/\"238aa4e484a9909bc385b7aea4cf2bea\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "a61624a6-b298-4228-abb8-879c4c6a2775",
      "X-Runtime",
      "0.102216",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "GET",
    "path": "/docs/site-api-hyperschema.json",
    "body": "",
    "status": 200,
    "response": {
      "$schema": "http://interagent.github.io/interagent-hyper-schema",
      "title": "DatoCMS Site API",
      "description": "",
      "type": "object",
      "id": "dato-api",
      "links": [
        {
          "href": "https://site-api.datocms.com",
          "rel": "self"
        }
      ],
      "properties": {
        "session": {
          "$ref": "#/definitions/session"
        },
        "account": {
          "$ref": "#/definitions/account"
        },
        "user": {
          "$ref": "#/definitions/user"
        },
        "access_token": {
          "$ref": "#/definitions/access_token"
        },
        "plugin": {
          "$ref": "#/definitions/plugin"
        },
        "site": {
          "$ref": "#/definitions/site"
        },
        "menu_item": {
          "$ref": "#/definitions/menu_item"
        },
        "job_result": {
          "$ref": "#/definitions/job_result"
        },
        "plan": {
          "$ref": "#/definitions/plan"
        },
        "subscription_compatibility": {
          "$ref": "#/definitions/subscription_compatibility"
        },
        "deploy_event": {
          "$ref": "#/definitions/deploy_event"
        },
        "item_type": {
          "$ref": "#/definitions/item_type"
        },
        "field": {
          "$ref": "#/definitions/field"
        },
        "item": {
          "$ref": "#/definitions/item"
        },
        "item_version": {
          "$ref": "#/definitions/item_version"
        },
        "upload": {
          "$ref": "#/definitions/upload"
        },
        "upload_request": {
          "$ref": "#/definitions/upload_request"
        },
        "scheduled_publication": {
          "$ref": "#/definitions/scheduled_publication"
        },
        "search_result": {
          "$ref": "#/definitions/search_result"
        },
        "role": {
          "$ref": "#/definitions/role"
        },
        "webhook": {
          "$ref": "#/definitions/webhook"
        },
        "webhook_call": {
          "$ref": "#/definitions/webhook_call"
        },
        "deployment_environment": {
          "$ref": "#/definitions/deployment_environment"
        },
        "item_type_filter": {
          "$ref": "#/definitions/item_type_filter"
        },
        "site_invitation": {
          "$ref": "#/definitions/site_invitation"
        },
        "editing_session": {
          "$ref": "#/definitions/editing_session"
        },
        "sso_user": {
          "$ref": "#/definitions/sso_user"
        },
        "sso_group": {
          "$ref": "#/definitions/sso_group"
        },
        "sso_setting": {
          "$ref": "#/definitions/sso_settings"
        }
      },
      "definitions": {
        "upload_request": {
          "position": 8,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Request a new upload",
              "description": "",
              "href": "/upload-requests",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/upload_request/properties/type"
                      },
                      "attributes": {
                        "type": "object",
                        "description": "JSON API attributes",
                        "properties": {
                          "filename": {
                            "type": "string",
                            "description": "The original file name",
                            "example": "image.png"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload_request"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Upload permission",
          "description": "To upload a file in DatoCMS, first you need to obtain an upload permission through this API endpoint. The response will contain the S3 URL where you will be able to upload the file with a direct PUT request.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "identity": {
              "$ref": "#/definitions/upload_request/definitions/id"
            },
            "type": {
              "type": [
                "string"
              ],
              "description": "JSON API type field",
              "pattern": "^upload_request$",
              "example": "upload_request"
            },
            "id": {
              "type": "string",
              "description": "The S3 path where the file will be stored",
              "example": "/7/1455102967-image.png"
            },
            "attributes": {
              "type": "object",
              "description": "JSON API attributes",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "The URL to use to upload the file with a direct PUT request",
                  "example": "https://dato-images.s3-eu-west-1.amazonaws.com/7/1455102967-image.png?X-Amz-Credential=AKIAJDTXTZHHDUCKAUMA%2F20160210"
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/upload_request/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/upload_request/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/upload_request/definitions/attributes"
            }
          }
        },
        "item": {
          "position": 2,
          "links": [
            {
              "method": "POST",
              "rel": "validate_existing",
              "private": true,
              "title": "Validates an existing record field",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/validate",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "id",
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "$ref": "#/definitions/item/properties/id"
                      },
                      "type": {
                        "$ref": "#/definitions/item/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/item/definitions/attributes"
                      },
                      "meta": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object",
                        "required": [
                          "item_type"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "item_type": {
                            "type": "object",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "$ref": "#/definitions/item_type/definitions/data"
                              }
                            }
                          },
                          "creator": {
                            "type": "object",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "anyOf": [
                                  {
                                    "$ref": "#/definitions/account/definitions/data"
                                  },
                                  {
                                    "$ref": "#/definitions/access_token/definitions/data"
                                  },
                                  {
                                    "$ref": "#/definitions/user/definitions/data"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "validate_new",
              "private": true,
              "title": "Validates a record field",
              "description": "",
              "href": "/items/validate",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/item/definitions/attributes"
                      },
                      "meta": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object",
                        "required": [
                          "item_type"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "item_type": {
                            "type": "object",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "$ref": "#/definitions/item_type/definitions/data"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new record",
              "description": "",
              "href": "/items",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/item/definitions/attributes"
                      },
                      "meta": {
                        "type": "object"
                      },
                      "relationships": {
                        "type": "object",
                        "required": [
                          "item_type"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "item_type": {
                            "type": "object",
                            "description": "The record model",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "$ref": "#/definitions/item_type/definitions/data"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/item_type"
                        },
                        {
                          "$ref": "#/definitions/item"
                        }
                      ]
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "duplicate",
              "title": "Duplicate a record",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/duplicate",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a record",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "meta": {
                      "type": "object"
                    },
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/item/properties/id"
                      },
                      "attributes": {
                        "$ref": "#/definitions/item/properties/attributes"
                      },
                      "meta": {
                        "$ref": "#/definitions/item/properties/meta"
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "creator": {
                            "type": "object",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "anyOf": [
                                  {
                                    "$ref": "#/definitions/account/definitions/data"
                                  },
                                  {
                                    "$ref": "#/definitions/access_token/definitions/data"
                                  },
                                  {
                                    "$ref": "#/definitions/user/definitions/data"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/item_type"
                        },
                        {
                          "$ref": "#/definitions/item"
                        }
                      ]
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all records",
              "description": "To list all records, send a GET request to the `/items` endpoint.\nThe following table contains the list of all the possible arguments, along with their type, description and examples values.\nTo filter items you can use or `filter[ids]` alone or `filter[type]` in combination with other type of filters.\n",
              "href": "/items",
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "filter[ids]": {
                    "description": "IDs to fetch, comma separated",
                    "example": "12,31",
                    "type": [
                      "string"
                    ]
                  },
                  "filter[type]": {
                    "description": "model ID to filter",
                    "example": "44",
                    "type": [
                      "string"
                    ]
                  },
                  "filter[query]": {
                    "description": "textual query to match",
                    "example": "foo",
                    "type": [
                      "string"
                    ]
                  },
                  "page[offset]": {
                    "description": "index of first record to fetch",
                    "example": 2,
                    "default": 1,
                    "type": [
                      "integer"
                    ]
                  },
                  "page[limit]": {
                    "description": "number of records to fetch",
                    "example": 15,
                    "default": 30,
                    "type": [
                      "integer"
                    ]
                  },
                  "version": {
                    "description": "whether you want the currently published versions of your records, or the latest available",
                    "example": "published",
                    "default": "latest",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "hrefSchema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "filter[ids]": {
                    "description": "IDs to fetch, comma separated",
                    "example": "12,31",
                    "type": [
                      "string"
                    ]
                  },
                  "filter[type]": {
                    "description": "model ID to filter",
                    "example": "44",
                    "type": [
                      "string"
                    ]
                  },
                  "filter[query]": {
                    "description": "textual query to match",
                    "example": "foo",
                    "type": [
                      "string"
                    ]
                  },
                  "page[offset]": {
                    "description": "index of first record to fetch",
                    "example": 2,
                    "default": 1,
                    "type": [
                      "integer"
                    ]
                  },
                  "page[limit]": {
                    "description": "number of records to fetch",
                    "example": 15,
                    "default": 30,
                    "type": [
                      "integer"
                    ]
                  },
                  "version": {
                    "description": "whether you want the currently published versions of your records, or the latest available",
                    "example": "published",
                    "default": "latest",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item"
                    }
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "total_count"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "total_count": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "references",
              "title": "List all the records of a model that link to a specific record",
              "private": true,
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/references/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a record",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}",
              "hrefSchema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "version": {
                    "description": "whether you want the currently published version of the record, or the latest available",
                    "example": "published",
                    "default": "latest",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a record",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "batch_destroy",
              "title": "Delete multiple records",
              "private": true,
              "description": "",
              "href": "/items",
              "hrefSchema": {
                "type": [
                  "object"
                ],
                "required": [
                  "filter[ids]"
                ],
                "additionalProperties": false,
                "properties": {
                  "filter[ids]": {
                    "description": "IDs to fetch, comma separated",
                    "example": "42,554",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job"
                  }
                }
              },
              "jobSchema": {
                "type": "object",
                "required": [
                  "data",
                  "meta"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array"
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "successful",
                      "failed"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "successful": {
                        "type": "integer"
                      },
                      "failed": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "batch_publish",
              "title": "Publish multiple records",
              "description": "",
              "href": "/items/publish",
              "hrefSchema": {
                "type": [
                  "object"
                ],
                "required": [
                  "filter[ids]"
                ],
                "additionalProperties": false,
                "properties": {
                  "filter[ids]": {
                    "description": "IDs to fetch, comma separated",
                    "example": "42,86",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job"
                  }
                }
              },
              "jobSchema": {
                "type": "object",
                "required": [
                  "data",
                  "meta"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array"
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "successful",
                      "failed"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "successful": {
                        "type": "integer"
                      },
                      "failed": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "batch_unpublish",
              "title": "Unpublish multiple records",
              "description": "",
              "href": "/items/unpublish",
              "hrefSchema": {
                "type": [
                  "object"
                ],
                "required": [
                  "filter[ids]"
                ],
                "additionalProperties": false,
                "properties": {
                  "filter[ids]": {
                    "description": "IDs to fetch, comma separated",
                    "example": "42,86",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job"
                  }
                }
              },
              "jobSchema": {
                "type": "object",
                "required": [
                  "data",
                  "meta"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array"
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "successful",
                      "failed"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "successful": {
                        "type": "integer"
                      },
                      "failed": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "publish",
              "title": "Publish a record",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/publish",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "unpublish",
              "title": "Unpublish a record",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/unpublish",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Record",
          "description": "DatoCMS stores the individual pieces of content you create from a model as records, which are much like table rows in a database. For backward-compatibility reasons, the API refers to records as \"items\".",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/item/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/item/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/item/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^item$",
              "example": "item"
            },
            "id": {
              "description": "ID of record",
              "type": "string",
              "example": "4235"
            },
            "attributes": {
              "description": "The JSON data associated to the record",
              "type": "object",
              "example": {
                "title": "My first blog post!",
                "content": "Lorem ipsum dolor sit amet...",
                "category": "24",
                "image": "1235"
              }
            },
            "meta": {
              "type": "object",
              "description": "Meta information regarding the record",
              "additionalProperties": false,
              "properties": {
                "created_at": {
                  "description": "Date of creation",
                  "type": "string",
                  "format": "date-time"
                },
                "updated_at": {
                  "description": "Last update time",
                  "type": "string",
                  "format": "date-time"
                },
                "published_at": {
                  "description": "Date of last publication",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "first_published_at": {
                  "description": "Date of first publication",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "publication_scheduled_at": {
                  "description": "Date of future publication",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "status": {
                  "description": "Status",
                  "type": [
                    "null",
                    "string"
                  ],
                  "enum": [
                    "draft",
                    "updated",
                    "published"
                  ]
                },
                "is_valid": {
                  "description": "Whether the current record is valid or not",
                  "type": "boolean"
                },
                "current_version": {
                  "description": "The current record version",
                  "type": "string"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "item_type"
              ],
              "additionalProperties": false,
              "properties": {
                "item_type": {
                  "description": "The record's model",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/item_type/definitions/data"
                    }
                  }
                },
                "creator": {
                  "description": "The entity (account/editor/access token) who created the record",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/account/definitions/data"
                        },
                        {
                          "$ref": "#/definitions/access_token/definitions/data"
                        },
                        {
                          "$ref": "#/definitions/user/definitions/data"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/item/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/item/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/item/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/item/definitions/relationships"
            },
            "meta": {
              "$ref": "#/definitions/item/definitions/meta"
            }
          }
        },
        "item_version": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Record version",
          "description": "",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/item_version/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/item_version/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/item_version/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^item_version$",
              "example": "item_version"
            },
            "id": {
              "description": "ID of item_version",
              "type": "string",
              "example": "4235"
            },
            "attributes": {
              "description": "The JSON data associated to the item_version",
              "type": "object",
              "example": {
                "title": "My first blog post!",
                "content": "Lorem ipsum dolor sit amet...",
                "category": "24",
                "image": {
                  "path": "/205/1516802387-foobar.png",
                  "width": 1905,
                  "height": 6472,
                  "format": "png",
                  "size": 1596377,
                  "alt": null,
                  "title": null
                },
                "published_at": "2016-09-20T18:50:24.914Z"
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "item",
                "editor"
              ],
              "additionalProperties": false,
              "properties": {
                "item": {
                  "description": "The records' version",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/item/definitions/data"
                    }
                  }
                },
                "editor": {
                  "description": "Editor",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/user/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/item_version/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/item_version/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/item_version/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/item_version/definitions/relationships"
            }
          }
        },
        "site": {
          "position": 1,
          "links": [
            {
              "rel": "self",
              "method": "GET",
              "title": "Retrieve the site",
              "description": "",
              "href": "/site",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "oneOf": [
                        {
                          "$ref": "#/definitions/menu_item"
                        },
                        {
                          "$ref": "#/definitions/user"
                        },
                        {
                          "$ref": "#/definitions/item_type"
                        },
                        {
                          "$ref": "#/definitions/role"
                        },
                        {
                          "$ref": "#/definitions/field"
                        },
                        {
                          "$ref": "#/definitions/upload"
                        },
                        {
                          "$ref": "#/definitions/sso_user"
                        }
                      ]
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update the site's settings",
              "description": "",
              "href": "/site",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/site/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/site/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "no_index": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/no_index"
                          },
                          "favicon": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/favicon"
                          },
                          "global_seo": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/global_seo"
                          },
                          "name": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/name"
                          },
                          "theme": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/theme"
                          },
                          "locales": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/locales"
                          },
                          "timezone": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/timezone"
                          },
                          "sso_saml_init_url": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/sso_saml_init_url"
                          },
                          "require_2fa": {
                            "$ref": "#/definitions/site/definitions/attributes/properties/require_2fa"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "sso_default_role": {
                            "type": "object",
                            "required": [
                              "data"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "data": {
                                "$ref": "#/definitions/role/definitions/data"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Site",
          "description": "A site represents a specific DatoCMS administrative area",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/site/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/site/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/site/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^site$",
              "example": "site"
            },
            "id": {
              "description": "ID of site",
              "type": "string",
              "example": "155"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "locales",
                "domain",
                "theme"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Site name",
                  "example": "My Awesome Website"
                },
                "domain": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Administrative area custom domain",
                  "example": "admin.my-awesome-website.com"
                },
                "google_maps_api_token": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Google API Key to be used by the LatLon widget",
                  "example": "xxxxxxxxxxxxx"
                },
                "imgix_host": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Imgix host",
                  "example": "www.datocms-assets.com"
                },
                "internal_domain": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "DatoCMS internal domain for the administrative area",
                  "example": "my-website.admin.datocms.com"
                },
                "locales": {
                  "type": "array",
                  "description": "Available locales",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1,
                  "example": [
                    "en"
                  ]
                },
                "timezone": {
                  "type": "string",
                  "description": "Site default timezone",
                  "example": "Europe/London"
                },
                "items_count": {
                  "type": "integer",
                  "description": "Number of items present in the site",
                  "example": 812
                },
                "no_index": {
                  "type": "boolean",
                  "description": "Whether the website needs to be indexed by search engines or not",
                  "example": true
                },
                "favicon": {
                  "description": "The upload id for the favicon",
                  "example": "123",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "theme_hue": {
                  "description": "Specifies the hue to use primary color in Site backend",
                  "type": "integer",
                  "example": 167
                },
                "last_data_change_at": {
                  "description": "Specifies the last time when a change of data occurred",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time",
                  "example": "2017-03-30T09:29:14.872Z"
                },
                "last_dump_at": {
                  "description": "Specifies the last time an integration plugin called the API",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time",
                  "example": "2017-02-10T11:03:42.208Z"
                },
                "deployable": {
                  "description": "Specifies whether all the deploy informations are correctly setup or not",
                  "type": "boolean",
                  "example": true
                },
                "frontend_url": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Frontend website url",
                  "example": "https://www.mywebsite.com/"
                },
                "require_2fa": {
                  "description": "Specifies whether all users of this site need to authenticate using two-factor authentication",
                  "type": "boolean",
                  "example": false
                },
                "sso_saml_init_url": {
                  "description": "Specifies if the Single Sign-on URL to reach",
                  "type": [
                    "null",
                    "string"
                  ],
                  "example": "https://sso.datocms.com/XXX/saml/init"
                },
                "theme": {
                  "description": "Specifies the theme to use in administrative area",
                  "type": "object",
                  "properties": {
                    "primary_color": {
                      "type": "object",
                      "required": [
                        "red",
                        "green",
                        "blue",
                        "alpha"
                      ],
                      "properties": {
                        "red": {
                          "type": "integer",
                          "example": 128
                        },
                        "green": {
                          "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color/properties/red"
                        },
                        "blue": {
                          "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color/properties/red"
                        },
                        "alpha": {
                          "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color/properties/red"
                        }
                      }
                    },
                    "light_color": {
                      "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color"
                    },
                    "accent_color": {
                      "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color"
                    },
                    "dark_color": {
                      "$ref": "#/definitions/site/definitions/attributes/properties/theme/properties/primary_color"
                    },
                    "logo": {
                      "description": "The site logo",
                      "example": "123",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "global_seo": {
                  "description": "Specifies default global settings",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "site_name": {
                      "type": [
                        "string"
                      ],
                      "description": "Site name, used in social sharing",
                      "example": "My Awesome Website"
                    },
                    "fallback_seo": {
                      "type": [
                        "object"
                      ],
                      "required": [
                        "title",
                        "description",
                        "image"
                      ],
                      "properties": {
                        "title": {
                          "type": [
                            "string"
                          ],
                          "example": "Default meta title"
                        },
                        "description": {
                          "type": [
                            "string"
                          ],
                          "example": "Default meta description"
                        },
                        "image": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "The id of the image",
                          "example": "123"
                        },
                        "twitter_card": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "enum": [
                            "summary",
                            "summary_large_image"
                          ],
                          "description": "Determines how a Twitter link preview is shown",
                          "example": "Large Image"
                        }
                      }
                    },
                    "title_suffix": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "example": " - My Awesome Website",
                      "description": "Title meta tag suffix"
                    },
                    "facebook_page_url": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "URL of facebook page",
                      "example": "http://facebook.com/awesomewebsite"
                    },
                    "twitter_account": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Twitter account associated to website",
                      "example": "@awesomewebsite"
                    }
                  }
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "menu_items",
                "item_types",
                "account",
                "users",
                "sso_users",
                "roles",
                "usage"
              ],
              "additionalProperties": false,
              "properties": {
                "account": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/account/definitions/data"
                    }
                  }
                },
                "deployment_environments": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "The list of deployment environment",
                      "items": {
                        "$ref": "#/definitions/deployment_environment/definitions/data"
                      }
                    }
                  }
                },
                "usage": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/subscription_compatibility/definitions/data"
                    }
                  }
                },
                "menu_items": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "The list of site menu items",
                      "items": {
                        "$ref": "#/definitions/menu_item/definitions/data"
                      }
                    }
                  }
                },
                "sso_users": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "The list of site SSO users",
                      "items": {
                        "$ref": "#/definitions/sso_user/definitions/data"
                      }
                    }
                  }
                },
                "users": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "The list of site users",
                      "items": {
                        "$ref": "#/definitions/user/definitions/data"
                      }
                    }
                  }
                },
                "item_types": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "description": "The list of site item types",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/item_type/definitions/data"
                      }
                    }
                  }
                },
                "sso_default_role": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "description": "Specifies the default role for newly created identity providers users",
                      "type": "object",
                      "items": {
                        "$ref": "#/definitions/role/definitions/data"
                      }
                    }
                  }
                },
                "roles": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "description": "The list of site roles",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/role/definitions/data"
                      }
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/site/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/site/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/site/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/site/definitions/relationships"
            }
          }
        },
        "menu_item": {
          "position": 6,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new menu item",
              "description": "",
              "href": "/menu-items",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/menu_item/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/menu_item/definitions/attributes"
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "item_type": {
                            "$ref": "#/definitions/menu_item/definitions/relationships/properties/item_type"
                          },
                          "parent": {
                            "$ref": "#/definitions/menu_item/definitions/relationships/properties/parent"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/menu_item"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a menu item",
              "description": "",
              "href": "/menu-items/{(%2Fschemata%2Fmenu_item%23%2Fdefinitions%2Fmenu_item%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/menu_item/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/menu_item/properties/id"
                      },
                      "attributes": {
                        "$ref": "#/definitions/menu_item/properties/attributes"
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "item_type": {
                            "$ref": "#/definitions/menu_item/definitions/relationships/properties/item_type"
                          },
                          "parent": {
                            "$ref": "#/definitions/menu_item/definitions/relationships/properties/parent"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/menu_item"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all menu items",
              "description": "",
              "href": "/menu-items",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/menu_item"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a menu item",
              "description": "",
              "href": "/menu-items/{(%2Fschemata%2Fmenu_item%23%2Fdefinitions%2Fmenu_item%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/menu_item"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a menu item",
              "description": "",
              "href": "/menu-items/{(%2Fschemata%2Fmenu_item%23%2Fdefinitions%2Fmenu_item%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/menu_item"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Menu Item",
          "description": "In DatoCMS you can organize the different Models present in your administrative area reordering and grouping them, so that their purpose will be more clear to the final editor.",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/menu_item/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/menu_item/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/menu_item/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^menu_item$",
              "example": "menu_item"
            },
            "id": {
              "description": "ID of menu item",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "label",
                "position"
              ],
              "additionalProperties": false,
              "properties": {
                "label": {
                  "type": "string",
                  "description": "The label of the menu item",
                  "example": "Posts"
                },
                "external_url": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "position": {
                  "type": "integer",
                  "description": "Ordering index",
                  "example": 1
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "item_type",
                "parent",
                "children"
              ],
              "additionalProperties": false,
              "properties": {
                "item_type": {
                  "type": "object",
                  "description": "item type associated with the menu item",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/item_type/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ]
                    }
                  }
                },
                "parent": {
                  "type": "object",
                  "description": "Parent menu item",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "type": [
                            "null"
                          ]
                        },
                        {
                          "$ref": "#/definitions/menu_item/definitions/data"
                        }
                      ],
                      "example": null
                    }
                  }
                },
                "children": {
                  "type": "object",
                  "description": "Underlying menu items",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/menu_item/definitions/data"
                      }
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/menu_item/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/menu_item/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/menu_item/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/menu_item/definitions/relationships"
            }
          }
        },
        "deploy_event": {
          "position": 7,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all deploy events",
              "description": "",
              "href": "/deploy-events",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/deploy_event"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a deploy event",
              "description": "",
              "href": "/deploy-events/{(%2Fschemata%2Fdeploy_event%23%2Fdefinitions%2Fdeploy_event%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/deploy_event"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Deploy activity",
          "description": "Represents an event occurred during the deploy process of your administrative area.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/deploy_event/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/deploy_event/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/deploy_event/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^deploy_event$",
              "example": "deploy_event"
            },
            "id": {
              "description": "ID of menu item",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "event_type",
                "data",
                "created_at"
              ],
              "additionalProperties": false,
              "properties": {
                "event_type": {
                  "type": "string",
                  "enum": [
                    "request",
                    "request_failed",
                    "response_success",
                    "response_failure",
                    "response_timeout"
                  ],
                  "description": "The type of activity",
                  "example": "response_success"
                },
                "created_at": {
                  "description": "The moment the activity occurred",
                  "type": [
                    "string"
                  ],
                  "format": "date-time",
                  "example": "2016-09-20T18:50:24.914Z"
                },
                "data": {
                  "description": "Any details regarding the event",
                  "type": [
                    "object"
                  ],
                  "example": {
                    "request_body": "{\"object_kind\":\"build\",\"ref\":\"master\",\"tag\":false,\"before_sha\":\"0000000000000000000000000000000000000000\",\"sha\":\"ecfccf5ea28af900c14b499a2b762e029c7492\",\"build_id\":10495,\"build_name\":\"build\",\"build_stage\":\"test\",\"build_status\":\"success\",\"build_started_at\":\"2016-09-20 18:49:22 UTC\",\"build_finished_at\":\"2016-09-20 18:50:24 UTC\",\"build_duration\":62.279854524,\"build_allow_failure\":false,\"project_id\":195,\"project_name\":\"Stefano Verna / awesome-website\",\"user\":{\"id\":null,\"name\":null,\"email\":null},\"commit\":{\"id\":6754,\"sha\":\"ecfccf5ea28af900c6614b499a2b762e029c7492\",\"message\":\"Update gems\\n\",\"author_name\":\"Stefano Verna\",\"author_email\":\"s.verna@datocms.com\",\"status\":\"success\",\"duration\":62,\"started_at\":\"2016-09-20 18:49:22 UTC\",\"finished_at\":\"2016-09-20 18:50:24 UTC\"},\"repository\":{\"name\":\"awesome-website\",\"url\":\"git@gitlab.com:stefanoverna/awesome-website.git\",\"description\":\"\",\"visibility_level\":0}}",
                    "request_headers": {
                      "Via": "1.1 vegur",
                      "Host": "webhooks.datocms.com",
                      "Origin": null,
                      "Version": "HTTP/1.1",
                      "Connection": "close",
                      "Connect-Time": "0",
                      "X-Request-Id": "5c1beced-0fe3-4c5b-b45d-68ba4a15b5f3",
                      "X-Gitlab-Event": "Build Hook",
                      "X-Forwarded-For": "46.101.135.219",
                      "X-Request-Start": "1474397424903",
                      "Total-Route-Time": "0",
                      "X-Forwarded-Port": "443",
                      "X-Forwarded-Proto": "https"
                    }
                  }
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "deployment_environment"
              ],
              "additionalProperties": false,
              "properties": {
                "deployment_environment": {
                  "type": "object",
                  "description": "Source deployment environment",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/deployment_environment/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/deploy_event/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/deploy_event/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/deploy_event/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/deploy_event/definitions/relationships"
            }
          }
        },
        "account": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Account",
          "description": "DatoCMS account",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/account/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/account/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/account/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^account$",
              "example": "account"
            },
            "id": {
              "description": "ID of account",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "email",
                "company"
              ],
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email",
                  "example": "foo@bar.com"
                },
                "first_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "First name",
                  "example": "Mark"
                },
                "last_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Last name",
                  "example": "Smith"
                },
                "company": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Company name",
                  "example": "Dundler Mifflin"
                },
                "password": {
                  "type": "string",
                  "description": "Password"
                },
                "api_token": {
                  "type": "string",
                  "description": "API token"
                },
                "is_2fa_active": {
                  "type": "boolean",
                  "description": "Whether 2-factor authentication is active for this account or not"
                },
                "provisioning_2fa_uri": {
                  "type": "string",
                  "description": "2-factor authentication provisioning URI"
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/account/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/account/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/account/definitions/attributes"
            }
          }
        },
        "item_type": {
          "position": 3,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new model",
              "description": "",
              "href": "/item-types",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item_type/definitions/type"
                      },
                      "attributes": {
                        "description": "JSON API attributes",
                        "type": "object",
                        "required": [
                          "name",
                          "api_key"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/name"
                          },
                          "api_key": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/api_key"
                          },
                          "singleton": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/singleton"
                          },
                          "all_locales_required": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/all_locales_required"
                          },
                          "sortable": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/sortable"
                          },
                          "modular_block": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/modular_block"
                          },
                          "draft_mode_active": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/draft_mode_active"
                          },
                          "tree": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/tree"
                          },
                          "ordering_direction": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/ordering_direction"
                          },
                          "collection_appeareance": {
                            "$ref": "#/definitions/item_type/definitions/attributes/properties/collection_appeareance"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "ordering_field": {
                            "$ref": "#/definitions/item_type/definitions/relationships/properties/ordering_field"
                          },
                          "title_field": {
                            "$ref": "#/definitions/item_type/definitions/relationships/properties/title_field"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "oneOf": [
                        {
                          "$ref": "#/definitions/menu_item"
                        }
                      ]
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a model",
              "description": "",
              "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item_type/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/item_type/properties/id"
                      },
                      "attributes": {
                        "$ref": "#/definitions/item_type/properties/attributes"
                      },
                      "relationships": {
                        "type": "object",
                        "required": [
                          "ordering_field",
                          "title_field"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "ordering_field": {
                            "$ref": "#/definitions/item_type/definitions/relationships/properties/ordering_field"
                          },
                          "title_field": {
                            "$ref": "#/definitions/item_type/definitions/relationships/properties/title_field"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all models",
              "description": "",
              "href": "/item-types",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a model",
              "description": "",
              "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "duplicate",
              "title": "Duplicate model",
              "description": "",
              "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}/duplicate",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a model",
              "description": "",
              "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Model",
          "description": "The way you define the kind of content you can edit inside your administrative area passes through the concept of Models, which are much like database tables. For backward-compatibility reasons, the API refers to models as \"item types\".",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/item_type/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/item_type/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/item_type/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^item_type$",
              "example": "item_type"
            },
            "id": {
              "description": "ID of item type",
              "type": "string",
              "example": "44"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "api_key",
                "singleton",
                "sortable",
                "modular_block",
                "tree",
                "ordering_direction",
                "draft_mode_active",
                "all_locales_required",
                "collection_appeareance"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Blog post"
                },
                "api_key": {
                  "type": "string",
                  "example": "post"
                },
                "collection_appeareance": {
                  "type": "string",
                  "enum": [
                    "compact",
                    "table"
                  ],
                  "example": "compact"
                },
                "singleton": {
                  "type": "boolean",
                  "example": false
                },
                "all_locales_required": {
                  "type": "boolean",
                  "example": false
                },
                "sortable": {
                  "type": "boolean",
                  "example": true
                },
                "modular_block": {
                  "type": "boolean",
                  "example": false
                },
                "draft_mode_active": {
                  "type": "boolean",
                  "example": false
                },
                "tree": {
                  "type": "boolean",
                  "example": false
                },
                "ordering_direction": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "example": null,
                  "enum": [
                    null,
                    "asc",
                    "desc"
                  ]
                },
                "has_singleton_item": {
                  "type": [
                    "boolean"
                  ],
                  "example": true
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "fields"
              ],
              "additionalProperties": false,
              "properties": {
                "menu_item": {
                  "type": "object",
                  "description": "The menu item instance related to this item type",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/menu_item/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ],
                      "example": null
                    }
                  }
                },
                "singleton_item": {
                  "type": "object",
                  "description": "The item instance related to this item type",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/item/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ],
                      "example": null
                    }
                  }
                },
                "fields": {
                  "type": "object",
                  "description": "The list of item type fields",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/field/definitions/data"
                      }
                    }
                  }
                },
                "title_field": {
                  "type": "object",
                  "description": "The field to use as display title",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/field/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ],
                      "example": null
                    }
                  }
                },
                "ordering_field": {
                  "type": "object",
                  "description": "The field upon which the collection is sorted",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/field/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ],
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/item_type/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/item_type/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/item_type/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/item_type/definitions/relationships"
            }
          }
        },
        "field": {
          "position": 4,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new field",
              "description": "",
              "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}/fields",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/field/definitions/type"
                      },
                      "attributes": {
                        "description": "JSON API attributes",
                        "type": "object",
                        "required": [
                          "label",
                          "field_type",
                          "api_key"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "label": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/label"
                          },
                          "field_type": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/field_type"
                          },
                          "api_key": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/api_key"
                          },
                          "localized": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/localized"
                          },
                          "validators": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/validators"
                          },
                          "appeareance": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/appeareance"
                          },
                          "position": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/position"
                          },
                          "hint": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/hint"
                          },
                          "default_value": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/default_value"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/field"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a field",
              "description": "",
              "href": "/fields/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Ffield%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/field/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/field/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "default_value": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/default_value"
                          },
                          "label": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/label"
                          },
                          "api_key": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/api_key"
                          },
                          "localized": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/localized"
                          },
                          "validators": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/validators"
                          },
                          "appeareance": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/appeareance"
                          },
                          "position": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/position"
                          },
                          "field_type": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/field_type"
                          },
                          "hint": {
                            "$ref": "#/definitions/field/definitions/attributes/properties/hint"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/field"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all fields",
              "description": "",
              "href": "/item-types/{(%2Fschemata%2Fitem_type%23%2Fdefinitions%2Fitem_type%2Fdefinitions%2Fidentity)}/fields",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/field"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a field",
              "description": "",
              "href": "/fields/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Ffield%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/field"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a field",
              "description": "",
              "href": "/fields/{(%2Fschemata%2Ffield%23%2Fdefinitions%2Ffield%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/field"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type"
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Field",
          "description": "Each Model consists of a set of fields. Using the database metaphore, fields are like table columns, and when creating them you need to specify their type (\"string\", \"image\", \"float\", etc.) and any required validation.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/field/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/field/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/field/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^field$",
              "example": "field"
            },
            "id": {
              "description": "ID of field",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "label",
                "field_type",
                "api_key",
                "localized",
                "validators",
                "appeareance",
                "position",
                "hint"
              ],
              "additionalProperties": false,
              "properties": {
                "label": {
                  "type": "string",
                  "description": "The label of the field",
                  "example": "Title"
                },
                "field_type": {
                  "type": "string",
                  "description": "Type of input",
                  "example": "string"
                },
                "default_value": {
                  "type": [
                    "boolean",
                    "null",
                    "string",
                    "object",
                    "number"
                  ],
                  "description": "Default value for Field",
                  "example": "some default value"
                },
                "localized": {
                  "type": "boolean",
                  "description": "Whether the field needs to be multilanguage or not"
                },
                "api_key": {
                  "type": "string",
                  "description": "Field API key",
                  "example": "title"
                },
                "hint": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Field hint",
                  "example": "This field will be used as post title"
                },
                "validators": {
                  "type": "object",
                  "description": "Optional field validations",
                  "example": {
                    "required": {}
                  }
                },
                "appeareance": {
                  "type": "object",
                  "required": [
                    "editor",
                    "parameters"
                  ],
                  "description": "Field appeareance",
                  "example": {
                    "editor": "single_line",
                    "parameters": {
                      "heading": false
                    },
                    "addons": []
                  },
                  "properties": {
                    "editor": {
                      "type": "string"
                    },
                    "parameters": {
                      "type": "object"
                    }
                  }
                },
                "position": {
                  "type": "integer",
                  "description": "Ordering index",
                  "example": 1
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "item_type"
              ],
              "additionalProperties": false,
              "properties": {
                "item_type": {
                  "type": "object",
                  "description": "Field item type",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/item_type/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/field/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/field/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/field/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/field/definitions/relationships"
            }
          }
        },
        "user": {
          "position": 5,
          "links": [
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update an editor",
              "description": "",
              "href": "/users/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/user/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/user/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "is_active": {
                            "$ref": "#/definitions/user/definitions/attributes/properties/is_active"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "role"
                        ],
                        "properties": {
                          "role": {
                            "$ref": "#/definitions/user/definitions/relationships/properties/role"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/user"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all editors",
              "description": "",
              "href": "/users",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/user"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve an editor",
              "description": "",
              "href": "/users/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/user"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete an editor",
              "description": "",
              "href": "/users/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/user"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Editor",
          "description": "A DatoCMS administrative area can be accessed by multiple people. Every editor is linked to a specific Role, which describes what actions it will be able to perform once logged in.",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/user/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/user/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/user/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^user$",
              "example": "user"
            },
            "id": {
              "description": "ID of editor",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "email"
              ],
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email",
                  "example": "mark.smith@example.com"
                },
                "is_2fa_active": {
                  "type": "boolean",
                  "description": "Whether 2-factor authentication is active for this account or not"
                },
                "full_name": {
                  "type": "string",
                  "description": "Full name",
                  "example": "Mark Smith"
                },
                "is_active": {
                  "type": "boolean",
                  "description": "Whether the user is active or not",
                  "example": true
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "role"
              ],
              "additionalProperties": false,
              "properties": {
                "role": {
                  "type": "object",
                  "description": "Role",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/role/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/user/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/user/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/user/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/user/definitions/relationships"
            }
          }
        },
        "search_result": {
          "position": 6,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "Search for results",
              "description": "",
              "href": "/search-results",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/search_result"
                    }
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "total_count"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "total_count": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Search result",
          "description": "DatoCMS Site Search is a way to deliver tailored search results to your site visitors. This is the endpoint you can use to query for results.",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/search_result/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/search_result/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/search_result/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^search_result$",
              "example": "search_result"
            },
            "id": {
              "description": "ID of result",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "title",
                "body_excerpt",
                "url",
                "score",
                "highlight"
              ],
              "additionalProperties": false,
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Page title",
                  "example": "My Page"
                },
                "body_excerpt": {
                  "type": "string",
                  "description": "First lines of body",
                  "example": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed eiusmod"
                },
                "url": {
                  "type": "string",
                  "description": "URL",
                  "example": "Smith"
                },
                "score": {
                  "type": "number",
                  "description": "Score",
                  "example": 11.3
                },
                "highlight": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "title": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Foo <em>bar</em> qux"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "body": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Foo <em>bar</em> qux"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/search_result/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/search_result/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/search_result/definitions/attributes"
            }
          }
        },
        "session": {
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new session",
              "description": "",
              "private": true,
              "href": "/sessions",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "anyOf": [
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "attributes"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type field",
                            "pattern": "^email_credentials$",
                            "example": "email_credentials"
                          },
                          "attributes": {
                            "description": "JSON API attributes",
                            "type": "object",
                            "required": [
                              "email",
                              "password"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "email": {
                                "type": "string",
                                "description": "Email",
                                "example": "foo@bar.com"
                              },
                              "password": {
                                "type": "string",
                                "description": "Password",
                                "example": "changeme"
                              },
                              "otp_code": {
                                "type": "string",
                                "description": "Two-factor authentication one-time password",
                                "example": "123512"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "attributes"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type field",
                            "pattern": "^password_reset$",
                            "example": "password_reset"
                          },
                          "attributes": {
                            "description": "JSON API attributes",
                            "type": "object",
                            "required": [
                              "token",
                              "password"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "token": {
                                "type": "string",
                                "description": "Invitation token",
                                "example": "XXXYYYZZZ"
                              },
                              "password": {
                                "type": "string",
                                "description": "Password",
                                "example": "changeme"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "attributes"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type field",
                            "pattern": "^invitation$",
                            "example": "invitation"
                          },
                          "attributes": {
                            "description": "JSON API attributes",
                            "type": "object",
                            "required": [
                              "token",
                              "password"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "token": {
                                "type": "string",
                                "description": "Invitation token",
                                "example": "XXXYYYZZZ"
                              },
                              "password": {
                                "type": "string",
                                "description": "Password",
                                "example": "changeme"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/session"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/user"
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Session",
          "description": "A session is required to access to read-and-write API endpoints",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/session/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/session/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/session/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^session$",
              "example": "session"
            },
            "id": {
              "description": "JSON web token for the session",
              "type": "string",
              "example": "eyJCJhbGci.eyJhaWwuY29tIn0.32wQOMci"
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "user"
              ],
              "additionalProperties": false,
              "properties": {
                "user": {
                  "type": "object",
                  "description": "The user associated with the session",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/user/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/session/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/session/definitions/id"
            },
            "relationships": {
              "$ref": "#/definitions/session/definitions/relationships"
            }
          }
        },
        "role": {
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new role",
              "description": "",
              "href": "/roles",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/role/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/role/definitions/attributes"
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/role"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a role",
              "description": "",
              "href": "/roles/{(%2Fschemata%2Frole%23%2Fdefinitions%2Frole%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/role/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/role/properties/id"
                      },
                      "attributes": {
                        "$ref": "#/definitions/role/properties/attributes"
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/role"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all roles",
              "description": "",
              "href": "/roles",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/role"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a role",
              "description": "",
              "href": "/roles/{(%2Fschemata%2Frole%23%2Fdefinitions%2Frole%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/role"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a role",
              "description": "",
              "href": "/roles/{(%2Fschemata%2Frole%23%2Fdefinitions%2Frole%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/role"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Role",
          "description": "A Role represents a specific set of actions an editor (or an API token) can perform on your administrative area.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/role/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/role/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/role/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^role$",
              "example": "role"
            },
            "id": {
              "description": "ID of role",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "can_edit_site",
                "can_edit_favicon",
                "can_edit_schema",
                "can_manage_users",
                "can_manage_webhooks",
                "can_manage_deployment_environments",
                "can_manage_access_tokens",
                "can_perform_site_search",
                "positive_item_type_permissions",
                "negative_item_type_permissions",
                "positive_deployment_environment_permissions",
                "negative_deployment_environment_permissions"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the role",
                  "example": "Editor"
                },
                "can_edit_favicon": {
                  "type": "boolean",
                  "description": "Can users edit the site favicon/global SEO settings?",
                  "example": true
                },
                "can_edit_site": {
                  "type": "boolean",
                  "description": "Can users edit the site settings?",
                  "example": true
                },
                "can_edit_schema": {
                  "type": "boolean",
                  "description": "Can users edit the schema?",
                  "example": true
                },
                "can_manage_users": {
                  "type": "boolean",
                  "description": "Can users invite other users?",
                  "example": true
                },
                "can_manage_shared_filters": {
                  "type": "boolean",
                  "description": "Can users manage shared filters?",
                  "example": true
                },
                "can_manage_deployment_environments": {
                  "type": "boolean",
                  "description": "Can users manage deployment environments?",
                  "example": true
                },
                "can_manage_webhooks": {
                  "type": "boolean",
                  "description": "Can users manage webhooks?",
                  "example": true
                },
                "can_manage_access_tokens": {
                  "type": "boolean",
                  "description": "Can manage access tokens",
                  "example": true
                },
                "can_perform_site_search": {
                  "type": "boolean",
                  "description": "Can perform site search",
                  "example": true
                },
                "positive_item_type_permissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "item_type",
                      "action",
                      "on_creator"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "item_type": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/item_type/definitions/data/properties/id"
                          },
                          {
                            "type": [
                              "null"
                            ]
                          }
                        ]
                      },
                      "action": {
                        "type": [
                          "string"
                        ],
                        "enum": [
                          "all",
                          "read",
                          "update",
                          "create",
                          "delete",
                          "publish",
                          "edit_creator",
                          "take_over"
                        ],
                        "description": "Permitted action",
                        "example": "all"
                      },
                      "on_creator": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "anyone",
                          "self",
                          "role",
                          null
                        ],
                        "description": "Permitted creator",
                        "example": "self"
                      }
                    }
                  }
                },
                "negative_item_type_permissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "item_type",
                      "action"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "item_type": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/item_type/definitions/data/properties/id"
                          },
                          {
                            "type": [
                              "null"
                            ]
                          }
                        ]
                      },
                      "action": {
                        "type": [
                          "string"
                        ],
                        "enum": [
                          "all",
                          "read",
                          "update",
                          "create",
                          "delete",
                          "publish",
                          "edit_creator",
                          "take_over"
                        ],
                        "description": "Permitted action",
                        "example": "all"
                      },
                      "on_creator": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "anyone",
                          "self",
                          "role",
                          null
                        ],
                        "description": "Permitted creator",
                        "example": "self"
                      }
                    }
                  }
                },
                "positive_deployment_environment_permissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "deployment_environment"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "deployment_environment": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/deployment_environment/definitions/data/properties/id"
                          },
                          {
                            "type": [
                              "null"
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "negative_deployment_environment_permissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "deployment_environment"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "deployment_environment": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/deployment_environment/definitions/data/properties/id"
                          },
                          {
                            "type": [
                              "null"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "deployment_environments"
              ],
              "additionalProperties": false,
              "properties": {
                "deployment_environments": {
                  "type": "object",
                  "description": "Environments on which this role can deploy",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/deployment_environment/definitions/data"
                      }
                    }
                  }
                },
                "parent": {
                  "type": "object",
                  "description": "Parent menu item",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "type": [
                            "null"
                          ]
                        },
                        {
                          "$ref": "#/definitions/menu_item/definitions/data"
                        }
                      ],
                      "example": null
                    }
                  }
                },
                "children": {
                  "type": "object",
                  "description": "Underlying menu items",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/menu_item/definitions/data"
                      }
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/role/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/role/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/role/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/role/definitions/relationships"
            }
          }
        },
        "access_token": {
          "position": 8,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new access token",
              "description": "",
              "href": "/access_tokens",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/access_token/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "name",
                          "can_access_cda",
                          "can_access_cda_preview",
                          "can_access_cma"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/name"
                          },
                          "can_access_cda": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cda"
                          },
                          "can_access_cda_preview": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cda_preview"
                          },
                          "can_access_cma": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cma"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "role"
                        ],
                        "properties": {
                          "role": {
                            "$ref": "#/definitions/access_token/definitions/relationships/properties/role"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/access_token"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update an access token",
              "description": "",
              "href": "/access_tokens/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/access_token/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/access_token/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "name",
                          "can_access_cda",
                          "can_access_cda_preview",
                          "can_access_cma"
                        ],
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/name"
                          },
                          "can_access_cda": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cda"
                          },
                          "can_access_cda_preview": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cda_preview"
                          },
                          "can_access_cma": {
                            "$ref": "#/definitions/access_token/definitions/attributes/properties/can_access_cma"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "role"
                        ],
                        "properties": {
                          "role": {
                            "$ref": "#/definitions/access_token/definitions/relationships/properties/role"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/access_token"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all access tokens",
              "description": "",
              "href": "/access_tokens",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/access_token"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a access tokens",
              "description": "",
              "href": "/access_tokens/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/access_token"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "regenerate_token",
              "title": "Request a new API token",
              "description": "",
              "private": true,
              "href": "/access_tokens/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}/regenerate_token",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/access_token"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete an access token",
              "description": "",
              "href": "/access_tokens/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/access_token"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "API token",
          "description": "An API token allows access to our API. It is linked to a Role, which describes what actions can be performed.",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/access_token/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/access_token/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/access_token/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^access_token$",
              "example": "access_token"
            },
            "id": {
              "description": "ID of access_token",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "hardcoded_type",
                "can_access_cda",
                "can_access_cda_preview",
                "can_access_cma"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of access token",
                  "example": "Read-only API token"
                },
                "token": {
                  "type": "string",
                  "description": "The actual API token",
                  "example": "XXXXXXXXXXXXXXX"
                },
                "can_access_cda": {
                  "type": "boolean",
                  "description": "Whether this access token can access the Content Delivery API published content endpoint",
                  "example": true
                },
                "can_access_cda_preview": {
                  "type": "boolean",
                  "description": "Whether this access token can access the Content Delivery API draft content endpoint",
                  "example": true
                },
                "can_access_cma": {
                  "type": "boolean",
                  "description": "Whether this access token can access the Content Management API",
                  "example": true
                },
                "hardcoded_type": {
                  "type": [
                    "null",
                    "string"
                  ]
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "role"
              ],
              "additionalProperties": false,
              "properties": {
                "role": {
                  "type": "object",
                  "description": "Role",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/role/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/access_token/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/access_token/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/access_token/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/access_token/definitions/relationships"
            }
          }
        },
        "upload": {
          "position": 9,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new upload",
              "description": "If you are using our JS or Ruby client you can use the `uploadFile` helper, passing either an URL or a local file as the argument.\n\nTo create a new upload without a client you will need to perform three separate steps.\n\n1. Send a `POST` request to the `/upload-requests` endpoint, to retrieve an uploading URL;\n2. Use the obtained URL to perform a `PUT` request, passing your file as payload;\n3. Make a `POST` request to `/uploads` with the upload path, alt and title.\n",
              "examples": {
                "http": [
                  {
                    "title": "Step 1: Request an upload permission",
                    "request": {
                      "method": "POST",
                      "url": "https://site-api.datocms.com/upload-requests",
                      "headers": {
                        "X-Api-Version": 3,
                        "Authorization": "Bearer YOUR-API-KEY",
                        "Accept": "application/json",
                        "Content-Type": "application/json"
                      },
                      "body": "{\n  \"data\": {\n    \"type\": \"upload_request\",\n    \"attributes\": {\n      \"filename\": \"image.png\"\n    }\n  }\n}\n"
                    },
                    "response": {
                      "statusCode": 200,
                      "statusText": "OK",
                      "headers": {
                        "Content-Type": "application/json; charset=utf-8",
                        "Cache-Control: cache-control": "max-age=0, private, must-revalidate",
                        "X-RateLimit-Limit": 30,
                        "X-RateLimit-Remaining": 28
                      },
                      "body": "{\n  \"data\": {\n    \"type\": \"upload_request\",\n    \"id\": \"/7/1455102967-image.png\",\n    \"attributes\": {\n      \"url\": \"https://dato-images.s3.eu-west-1.amazonaws.com/205/1565776891-image.png?x-amz-acl=public-read&...\"\n    }\n  }\n}\n"
                    }
                  },
                  {
                    "title": "Step 2: Upload file to S3",
                    "request": {
                      "method": "PUT",
                      "url": "https://dato-images.s3.eu-west-1.amazonaws.com/205/1565776891-image.png?x-amz-acl=public-read&...",
                      "headers": {},
                      "body": "<YOUR_FILE_BINARY_CONTENT>"
                    },
                    "response": {
                      "statusCode": 200,
                      "statusText": "OK",
                      "headers": {
                        "x-amz-request-id": "XXX",
                        "Server": "AmazonS3"
                      },
                      "body": ""
                    }
                  },
                  {
                    "title": "Step 3: Create the actual upload",
                    "request": {
                      "method": "POST",
                      "url": "https://site-api.datocms.com/uploads",
                      "headers": {
                        "X-Api-Version": 3,
                        "Authorization": "Bearer YOUR-API-KEY",
                        "Accept": "application/json",
                        "Content-Type": "application/json"
                      },
                      "body": "{\n  \"data\": {\n    \"type\": \"upload\",\n    \"attributes\": {\n      \"path\": \"/205/1565776891-image.png\",\n      \"alt\": \"Nyan the cat\",\n      \"title\": \"My cat\"\n    }\n  }\n}\n"
                    },
                    "response": {
                      "statusCode": 200,
                      "statusText": "OK",
                      "headers": {
                        "Content-Type": "application/json; charset=utf-8",
                        "Cache-Control: cache-control": "max-age=0, private, must-revalidate",
                        "X-RateLimit-Limit": 30,
                        "X-RateLimit-Remaining": 28
                      },
                      "body": "{\n  \"data\": {\n    \"type\": \"upload\",\n    \"id\": \"666\",\n    \"attributes\": {\n      \"size\": 444,\n      \"width\": 30,\n      \"height\": 30,\n      \"path\": \"/205/1565776891-image.png\",\n      \"url\": \"https://www.datocms-assets.com/205/1565776891-image.png\",\n      \"format\": \"jpg\",\n      \"alt\": \"Nyan the cat\",\n      \"title\": \"My cat\",\n      \"is_image\": true,\n      \"created_at\": null\n    }\n  }\n}\n"
                    }
                  }
                ],
                "js": [
                  {
                    "title": "Create an upload with uploadFile helper",
                    "request": "const { SiteClient } = require(\"datocms-client\").SiteClient;\nconst client = new SiteClient(\"YOUR-API-KEY\");\n\n// upload using URL:\n\nclient\n  .uploadFile(\"http://i.giphy.com/NXOF5rlaSXdAc.gif\")\n  .then(uploadId => console.log(uploadId))\n  .catch(error => console.log(error));\n\n// or using local files:\n\nclient\n  .uploadFile(\"./image.png\")\n  .then(uploadId => console.log(uploadId))\n  .catch(error => console.log(error));\n",
                    "response": "{\n  \"id\": \"666\",\n  \"alt\": \"Nyan the cat\",\n  \"createdAt\": null,\n  \"format\": \"jpg\",\n  \"height\": 30,\n  \"isImage\": true,\n  \"path\": \"/205/1565776891-image.png\",\n  \"size\": 444,\n  \"title\": \"My cat\",\n  \"url\": \"https://www.datocms-assets.com/205/1565776891-image.png\",\n  \"width\": 30\n}\n"
                  }
                ],
                "ruby": [
                  {
                    "title": "Create an upload with uploadFile helper",
                    "request": "require \"dato\"\nclient = Dato::Site::Client.new(\"YOUR-API-KEY\")\n\n# upload using URL:\n\nupload_id = client.uploads.upload_file(\"http://i.giphy.com/NXOF5rlaSXdAc.gif\")\n\nputs upload_id.inspect\n\n# or using local files:\n\nupload_id = client.uploads.upload_file(\"./image.png\")\n\nputs upload_id.inspect\n"
                  }
                ]
              },
              "href": "/uploads",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/upload/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "path"
                        ],
                        "properties": {
                          "size": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/size"
                          },
                          "width": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/width"
                          },
                          "height": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/height"
                          },
                          "path": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/path"
                          },
                          "format": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/format"
                          },
                          "copyright": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/copyright"
                          },
                          "author": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/author"
                          },
                          "notes": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/notes"
                          },
                          "default_field_metadata": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/default_field_metadata"
                          },
                          "tags": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/tags"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/upload"
                      },
                      {
                        "$ref": "#/definitions/job"
                      }
                    ]
                  }
                }
              },
              "jobSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all uploads",
              "description": "",
              "href": "/uploads",
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "filter[type]": {
                    "description": "Type of upload",
                    "enum": [
                      "file",
                      "image",
                      "video",
                      "not_used",
                      "other"
                    ],
                    "type": [
                      "string"
                    ],
                    "example": "image"
                  },
                  "filter[query]": {
                    "description": "Textual query to match",
                    "example": "foobar",
                    "type": [
                      "string"
                    ]
                  },
                  "sort[direction]": {
                    "description": "Ordering direction by upload date",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": [
                      "string"
                    ],
                    "example": "desc"
                  },
                  "page[offset]": {
                    "description": "Index of first record to fetch",
                    "example": 2,
                    "default": 1,
                    "type": [
                      "integer"
                    ]
                  },
                  "page[limit]": {
                    "description": "Number of records to fetch",
                    "example": 15,
                    "default": 30,
                    "type": [
                      "integer"
                    ]
                  }
                }
              },
              "hrefSchema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "filter[type]": {
                    "description": "Type of upload",
                    "enum": [
                      "file",
                      "image",
                      "video",
                      "not_used",
                      "other"
                    ],
                    "type": [
                      "string"
                    ],
                    "example": "image"
                  },
                  "filter[query]": {
                    "description": "Textual query to match",
                    "example": "foobar",
                    "type": [
                      "string"
                    ]
                  },
                  "sort[direction]": {
                    "description": "Ordering direction by upload date",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": [
                      "string"
                    ],
                    "example": "desc"
                  },
                  "page[offset]": {
                    "description": "Index of first record to fetch",
                    "example": 2,
                    "default": 1,
                    "type": [
                      "integer"
                    ]
                  },
                  "page[limit]": {
                    "description": "Number of records to fetch",
                    "example": 15,
                    "default": 30,
                    "type": [
                      "integer"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/upload"
                    }
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "total_count"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "total_count": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a upload",
              "description": "",
              "href": "/uploads/{(%2Fschemata%2Fupload%23%2Fdefinitions%2Fupload%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a upload",
              "description": "",
              "href": "/uploads/{(%2Fschemata%2Fupload%23%2Fdefinitions%2Fupload%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "batch_destroy",
              "title": "Delete multiple uploads",
              "description": "",
              "private": true,
              "href": "/uploads",
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "filter[ids]": {
                    "description": "IDs to fetch, comma separated",
                    "example": "42,86",
                    "type": [
                      "string"
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job"
                  }
                }
              },
              "jobSchema": {
                "type": "object",
                "required": [
                  "data",
                  "meta"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array"
                  },
                  "meta": {
                    "type": "object",
                    "required": [
                      "deleted",
                      "in_use"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "deleted": {
                        "type": "integer"
                      },
                      "in_use": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a upload",
              "description": "",
              "href": "/uploads/{(%2Fschemata%2Fupload%23%2Fdefinitions%2Fupload%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/upload/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/upload/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "path": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/path"
                          },
                          "basename": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/basename"
                          },
                          "size": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/size"
                          },
                          "width": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/width"
                          },
                          "height": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/height"
                          },
                          "format": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/format"
                          },
                          "copyright": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/copyright"
                          },
                          "author": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/author"
                          },
                          "notes": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/notes"
                          },
                          "tags": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/tags"
                          },
                          "default_field_metadata": {
                            "$ref": "#/definitions/upload/definitions/attributes/properties/default_field_metadata"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/upload"
                      },
                      {
                        "$ref": "#/definitions/job"
                      }
                    ]
                  }
                }
              },
              "jobSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/upload"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Upload",
          "description": "Every file you upload to DatoCMS will be retrievable from this endpoint.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/upload/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/upload/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/upload/properties/id"
            },
            "type": {
              "description": "JSON API type upload",
              "type": [
                "string"
              ],
              "pattern": "^upload$",
              "example": "upload"
            },
            "id": {
              "description": "ID of upload",
              "type": "string",
              "example": "666"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "size",
                "path",
                "url",
                "format"
              ],
              "additionalProperties": false,
              "properties": {
                "size": {
                  "type": "integer",
                  "description": "size of the upload",
                  "example": 444
                },
                "width": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Width of image",
                  "example": 30
                },
                "height": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Height of image",
                  "example": 30
                },
                "path": {
                  "type": "string",
                  "description": "Upload path",
                  "example": "/45/1496845848-digital-cats.jpg"
                },
                "basename": {
                  "type": "string",
                  "description": "Upload basename",
                  "example": "digital-cats"
                },
                "url": {
                  "type": "string",
                  "description": "Upload URL",
                  "example": "https://www.datocms-assets.com/45/1496845848-digital-cats.jpg"
                },
                "format": {
                  "type": "string",
                  "description": "Format",
                  "example": "jpg"
                },
                "author": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Author",
                  "example": "Mark Smith"
                },
                "copyright": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Copyright",
                  "example": "2020 DatoCMS"
                },
                "notes": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Notes",
                  "example": "Nyan the cat"
                },
                "default_field_metadata": {
                  "type": "object",
                  "description": "Metadata to apply to fields",
                  "example": {
                    "en": {
                      "title": "this is the default title",
                      "alt": "this is the default alternate text",
                      "custom_data": {
                        "foo": "bar"
                      }
                    }
                  }
                },
                "is_image": {
                  "type": "boolean",
                  "description": "Is this upload an image?",
                  "example": true
                },
                "created_at": {
                  "description": "Date of upload",
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "tags": {
                  "type": [
                    "array"
                  ],
                  "description": "Tags",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "cats"
                  ]
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "site"
              ],
              "additionalProperties": false,
              "properties": {
                "site": {
                  "type": "object",
                  "description": "Field item type",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/site/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/upload/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/upload/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/upload/definitions/attributes"
            }
          }
        },
        "plugin": {
          "position": 10,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new plugin",
              "description": "",
              "href": "/plugins",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/plugin/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/name"
                          },
                          "description": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/description"
                          },
                          "url": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/url"
                          },
                          "field_types": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/field_types"
                          },
                          "parameter_definitions": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/parameter_definitions"
                          },
                          "plugin_type": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/plugin_type"
                          },
                          "package_name": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/package_name"
                          },
                          "package_version": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/package_version"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/plugin"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a plugin",
              "description": "",
              "href": "/plugins/{(%2Fschemata%2Fplugin%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/plugin/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/plugin/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "parameters"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/name"
                          },
                          "description": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/description"
                          },
                          "url": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/url"
                          },
                          "parameters": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/parameters"
                          },
                          "package_version": {
                            "$ref": "#/definitions/plugin/definitions/attributes/properties/package_version"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/plugin"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all plugins",
              "description": "",
              "href": "/plugins",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/plugin"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a plugins",
              "description": "",
              "href": "/plugins/{(%2Fschemata%2Fplugin%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/plugin"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a plugin",
              "description": "",
              "href": "/plugins/{(%2Fschemata%2Fplugin%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/plugin"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Plugin",
          "description": "Plugins enable developers to replace DatoCMS field components with HTML5 applications so the editing experiences of the DatoCMS web app can be customized.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/plugin/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/plugin/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/plugin/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^plugin$",
              "example": "plugin"
            },
            "id": {
              "description": "ID of plugin",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "field_types",
                "url",
                "parameters",
                "parameter_definitions",
                "plugin_type"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the plugin",
                  "example": "5 stars"
                },
                "description": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "description": "A textual description for the plugin",
                  "example": "A simple field editor that allows a nicer editing rating experience"
                },
                "package_name": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "description": "Plugin Npm package name",
                  "example": "datocms-plugin-star-rating-editor"
                },
                "package_version": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "description": "Plugin Npm version",
                  "example": "0.0.4"
                },
                "plugin_type": {
                  "type": "string",
                  "description": "The type of extension",
                  "enum": [
                    "field_editor",
                    "sidebar",
                    "field_addon"
                  ],
                  "example": "field"
                },
                "field_types": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "boolean",
                      "date",
                      "date_time",
                      "float",
                      "integer",
                      "string",
                      "text",
                      "lat_lon",
                      "json",
                      "seo",
                      "link",
                      "links",
                      "video",
                      "color",
                      "slug"
                    ]
                  },
                  "description": "On which types of field this plugin can be used",
                  "example": [
                    "integer",
                    "float"
                  ]
                },
                "url": {
                  "type": "string",
                  "description": "The name of the plugin",
                  "example": "https://cdn.rawgit.com/datocms/extensions/master/samples/five-stars/extension.js"
                },
                "parameters": {
                  "type": "object",
                  "description": "Global parameters which are set on on a project level. Values apply globally to every instance of an plugin within the project.",
                  "keepOriginalCaseOnKeys": true,
                  "example": {
                    "devMode": true
                  }
                },
                "parameter_definitions": {
                  "type": "object",
                  "description": "Parameter definitions for the plugin",
                  "required": [
                    "global",
                    "instance"
                  ],
                  "additionalProperties": false,
                  "keepOriginalCaseOnKeys": true,
                  "properties": {
                    "global": {
                      "type": "array"
                    },
                    "instance": {
                      "type": "array"
                    }
                  },
                  "example": {
                    "global": [
                      {
                        "id": "devMode",
                        "type": "boolean",
                        "label": "Run in development mode"
                      }
                    ],
                    "instance": [
                      {
                        "id": "halfStars",
                        "type": "boolean",
                        "label": "Allow half stars ratings?",
                        "default": false,
                        "hint": "If enabled, rate using whole stars, if enabled, it doesn't use half-steps"
                      },
                      {
                        "id": "totalStars",
                        "type": "integer",
                        "label": "Amount of stars to show",
                        "default": 5,
                        "hint": ""
                      }
                    ]
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/plugin/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/plugin/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/plugin/definitions/attributes"
            }
          }
        },
        "subscription_compatibility": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Subscription compatibility",
          "description": "",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/subscription_compatibility/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/subscription_compatibility/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/subscription_compatibility/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^subscription_compatibility$",
              "example": "subscription_compatibility"
            },
            "id": {
              "description": "ID of subscription compatibility",
              "type": "string",
              "example": "4235"
            },
            "analysis": {
              "type": "object",
              "description": "Analysis",
              "properties": {
                "current_usage": {
                  "type": [
                    "boolean",
                    "integer"
                  ]
                },
                "plan_limit": {
                  "type": [
                    "boolean",
                    "integer"
                  ]
                },
                "compatible": {
                  "type": "boolean"
                },
                "compatible_with_extra_charges": {
                  "type": "boolean"
                }
              }
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "limits",
                "compatible",
                "compatible_with_extra_charges",
                "incompatible_limits",
                "users_analysis",
                "roles_analysis",
                "item_types_analysis",
                "locales_analysis",
                "indexable_pages_analysis",
                "version_history_analysis",
                "items_analysis",
                "uploadable_bytes_analysis",
                "custom_domain_analysis",
                "otp_analysis"
              ],
              "additionalProperties": false,
              "properties": {
                "limits": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "incompatible_limits": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "compatible": {
                  "type": "boolean"
                },
                "compatible_with_extra_charges": {
                  "type": "boolean"
                },
                "users_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "roles_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "item_types_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "locales_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "indexable_pages_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "version_history_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "items_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "uploadable_bytes_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "custom_domain_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "otp_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "sso_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "item_locking_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                },
                "advanced_media_area_analysis": {
                  "$ref": "#/definitions/subscription_compatibility/definitions/analysis"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "plan"
              ],
              "additionalProperties": false,
              "properties": {
                "plan": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/plan/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/subscription_compatibility/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/subscription_compatibility/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/subscription_compatibility/definitions/attributes"
            }
          }
        },
        "plan": {
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Plan",
          "description": "A field represents a plan",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/plan/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/plan/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/plan/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^plan$",
              "example": "plan"
            },
            "id": {
              "description": "ID of plan",
              "type": "string",
              "example": "124"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the plan",
                  "example": "Basic"
                },
                "active": {
                  "type": "boolean",
                  "description": "Whether this plan is active or legacy",
                  "example": true
                },
                "custom_domain": {
                  "type": "boolean",
                  "description": "Whether custom domain can be enabled or not",
                  "example": true
                },
                "users": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of users that can be invited",
                  "example": 2
                },
                "indexable_pages": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of indexable pages",
                  "example": 1000
                },
                "deployment_environments": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of deployment environments",
                  "example": 4
                },
                "plugins": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of plugins",
                  "example": 4
                },
                "items": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of records allowed",
                  "example": 5000
                },
                "monthly_price": {
                  "type": "integer",
                  "description": "Monthly price",
                  "example": 19
                },
                "yearly_price": {
                  "type": "integer",
                  "description": "Yearly price",
                  "example": 189
                },
                "uploadable_bytes": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Uploadable bytes",
                  "example": 1073741824
                },
                "traffic_bytes": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Amount of asset data transferred between our Asset CDN and GraphQL Content Delivery API and content consumers",
                  "example": 1073741824
                },
                "api_calls": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "The number of requests made to both our Content Management and Content Delivery APIs",
                  "example": 100000
                },
                "access_tokens": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "The number of different API tokens you can generate, each which different permissions",
                  "example": 10
                },
                "roles": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of roles allowed",
                  "example": 10
                },
                "locales": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of locales allowed",
                  "example": 10
                },
                "item_types": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "description": "Number of models allowed",
                  "example": 25
                },
                "item_locking": {
                  "type": "boolean",
                  "description": "Whether collaboration features are enabled or not",
                  "example": true
                },
                "advanced_media_area": {
                  "type": "boolean",
                  "description": "Whether advanced Media Area is enabled or not",
                  "example": true
                },
                "sso": {
                  "type": "boolean",
                  "description": "Whether Single Sign-On feature is enabled or not",
                  "example": true
                },
                "version_history": {
                  "type": "boolean",
                  "description": "Whether version history can be enabled or not",
                  "example": true
                },
                "otp": {
                  "type": "boolean",
                  "description": "Whether two-factor authentication can be enabled or not",
                  "example": true
                },
                "extra_packets": {
                  "type": "object",
                  "description": "Available extra packets",
                  "additionalProperties": false,
                  "properties": {
                    "users": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "locales": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "item_types": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "roles": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "deployment_environments": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "access_tokens": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "users": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "locales": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "item_types": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "roles": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "deployment_environments": {
                      "amount_per_packet": 1,
                      "price": 10
                    },
                    "access_tokens": {
                      "amount_per_packet": 1,
                      "price": 10
                    }
                  }
                },
                "auto_packets": {
                  "type": "object",
                  "description": "Automatic packets",
                  "additionalProperties": false,
                  "properties": {
                    "traffic_bytes": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    },
                    "api_calls": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "amount_per_packet",
                        "price"
                      ],
                      "properties": {
                        "amount_per_packet": {
                          "type": "integer"
                        },
                        "price": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "api_calls": {
                      "amount_per_packet": 250000,
                      "price": 9
                    },
                    "traffic_bytes": {
                      "amount_per_packet": 161061273600,
                      "price": 29
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/plan/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/plan/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/plan/definitions/attributes"
            }
          }
        },
        "scheduled_publication": {
          "position": 15,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new scheduled publication",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/scheduled_publication",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/scheduled_publication/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/scheduled_publication/definitions/attributes"
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/scheduled_publication"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item"
                    }
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a scheduled publication",
              "description": "",
              "href": "/items/{(%2Fschemata%2Fitem%23%2Fdefinitions%2Fitem%2Fdefinitions%2Fidentity)}/scheduled_publication",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data",
                  "included"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/scheduled_publication"
                  },
                  "included": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item"
                    }
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Scheduled publication",
          "description": "You can create scheduled publication to publish records in the future",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/scheduled_publication/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/scheduled_publication/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/scheduled_publication/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^scheduled_publication$",
              "example": "scheduled_publication$"
            },
            "id": {
              "description": "ID of scheduled_publication",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "publication_scheduled_at": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time",
                  "description": "The future date for the publication",
                  "example": "2017-02-10T11:03:42.208Z"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "item"
              ],
              "additionalProperties": false,
              "properties": {
                "item": {
                  "type": "object",
                  "description": "Item",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/item/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/scheduled_publication/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/scheduled_publication/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/scheduled_publication/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/scheduled_publication/definitions/relationships"
            }
          }
        },
        "webhook": {
          "position": 11,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new webhook",
              "description": "",
              "href": "/webhooks",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/webhook/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "name",
                          "url",
                          "headers",
                          "events",
                          "custom_payload",
                          "http_basic_user",
                          "http_basic_password"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/name"
                          },
                          "url": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/url"
                          },
                          "custom_payload": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/custom_payload"
                          },
                          "headers": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/headers"
                          },
                          "events": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/events"
                          },
                          "http_basic_user": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/http_basic_user"
                          },
                          "http_basic_password": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/http_basic_password"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/webhook"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a webhook",
              "description": "",
              "href": "/webhooks/{(%2Fschemata%2Fwebhook%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/webhook/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/webhook/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/name"
                          },
                          "url": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/url"
                          },
                          "custom_payload": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/custom_payload"
                          },
                          "headers": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/headers"
                          },
                          "events": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/events"
                          },
                          "http_basic_user": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/http_basic_user"
                          },
                          "http_basic_password": {
                            "$ref": "#/definitions/webhook/definitions/attributes/properties/http_basic_password"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/webhook"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all webhooks",
              "description": "",
              "href": "/webhooks",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/webhook"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a webhook",
              "description": "",
              "href": "/webhooks/{(%2Fschemata%2Fwebhook%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/webhook"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a webhook",
              "description": "",
              "href": "/webhooks/{(%2Fschemata%2Fwebhook%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/webhook"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Webhook",
          "description": "A webhook allows to make requests following certain Dato events. It is linked to a Role, which describes what actions can be performed.",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/webhook/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/webhook/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/webhook/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^webhook$",
              "example": "webhook"
            },
            "id": {
              "description": "ID of webhook",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "url",
                "headers",
                "events",
                "http_basic_user",
                "http_basic_password"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Unique name for the webhook",
                  "example": "Item type creation/update"
                },
                "url": {
                  "type": "string",
                  "description": "The URL to be called",
                  "example": "https://www.example.com/webhook"
                },
                "custom_payload": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "A custom payload",
                  "example": "{ message: 'Successfully published record!' }"
                },
                "http_basic_user": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "HTTP Basic Authorization username",
                  "example": "user"
                },
                "http_basic_password": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "HTTP Basic Authorization password",
                  "example": "password"
                },
                "headers": {
                  "type": "object",
                  "description": "Additional headers that will be sent",
                  "example": {
                    "X-Foo": "Bar"
                  }
                },
                "events": {
                  "type": "array",
                  "description": "All the events you will be notified for",
                  "example": [
                    {
                      "entity_type": "item_type",
                      "event_types": [
                        "update",
                        "create"
                      ],
                      "filter": {
                        "entity_type": "item_type",
                        "entity_ids": [
                          "42",
                          "43"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/webhook/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/webhook/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/webhook/definitions/attributes"
            }
          }
        },
        "webhook_call": {
          "position": 12,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all webhooks calls",
              "description": "",
              "href": "/webhooks/calls",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/webhook_call"
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "resend_webhook",
              "title": "Resends the webhook with the same parameters",
              "description": "",
              "private": true,
              "href": "/webhooks/{(%2Fschemata%2Faccess_token%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}/resend_webhook",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/webhook_call"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Webhook call",
          "description": "Represents a log entry in the webhooks activity list.",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/webhook_call/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/webhook_call/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/webhook_call/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^webhook_call$",
              "example": "webhook_call"
            },
            "id": {
              "description": "ID of webhook call",
              "type": "string",
              "example": "42"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "entity_type",
                "event_type",
                "created_at",
                "request_url",
                "request_headers",
                "request_payload",
                "response_status",
                "response_headers",
                "response_payload"
              ],
              "additionalProperties": false,
              "properties": {
                "entity_type": {
                  "type": "string",
                  "enum": [
                    "item",
                    "item_type",
                    "upload"
                  ],
                  "description": "The subject of webhook triggering",
                  "example": "item"
                },
                "event_type": {
                  "type": "string",
                  "enum": [
                    "create",
                    "update",
                    "delete",
                    "publish",
                    "unpublish"
                  ],
                  "description": "The event that triggers the webhook call",
                  "example": "update"
                },
                "created_at": {
                  "description": "The moment the call occurred",
                  "type": [
                    "string"
                  ],
                  "format": "date-time",
                  "example": "2016-09-20T18:50:24.914Z"
                },
                "request_url": {
                  "description": "The url that the webhook called",
                  "type": "string",
                  "example": "https://www.example.com/webhook"
                },
                "request_headers": {
                  "type": "object",
                  "description": "The request's headers",
                  "example": {
                    "Accept": "*/*",
                    "User-Agent": "DatoCMS (datocms.com)",
                    "Authorization": "Basic Y2lhbzptaWFv",
                    "Content-Type": "application/json"
                  }
                },
                "request_payload": {
                  "type": "string",
                  "description": "The body of the request",
                  "example": "{ \"entity_type\": \"item\", \"event_type\": \"update\", \"entity\": { \"id\": \"293467\", \"type\": \"item\", \"attributes\": { \"created_at\": \"2018-05-22T10:13:00.461Z\", \"updated_at\": \"2018-07-30T14:13:50.068Z\", \"is_valid\": true, \"avatar\": { \"path\": \"/205/1526984443-untitled-drawing.png\", \"format\": \"png\", \"size\": 242630, \"alt\": null, \"title\": null, \"width\": 329, \"height\": 286 }, \"name\": \"3Francesco Falchy\", \"gallery\": [] }, \"relationships\": { \"item_type\": { \"data\": { \"id\": \"1423\", \"type\": \"item_type\" } }, \"published_version\": { \"data\": { \"id\": \"670532\", \"type\": \"item_version\" } }, \"current_version\": { \"data\": { \"id\": \"670532\", \"type\": \"item_version\" } } } } }"
                },
                "response_status": {
                  "description": "The status of the response",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "example": 200
                },
                "response_headers": {
                  "type": "object",
                  "description": "The response's headers",
                  "example": {
                    "via": "1.1 vegur, 1.1 37c0945d19329fccc23efb283d01aa06.cloudfront.net (CloudFront)",
                    "date": "Fri, 27 Jul 2018 11:59:20 GMT",
                    "server": "gunicorn/19.6.0"
                  }
                },
                "response_payload": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The body of the response",
                  "example": "ok"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "webhook"
              ],
              "additionalProperties": false,
              "properties": {
                "webhook": {
                  "type": "object",
                  "description": "The webhook which has been called",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/webhook/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/webhook_call/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/webhook_call/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/webhook_call/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/webhook_call/definitions/relationships"
            }
          }
        },
        "deployment_environment": {
          "position": 13,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all deployment environments for a site",
              "description": "",
              "href": "/deployment-environments",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/deployment_environment"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a deployment environment",
              "description": "",
              "href": "/deployment-environments/{(%2Fschemata%2Fdeployment_environment%23%2Fdefinitions%2Fdeployment_environment%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/deployment_environment"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "create",
              "title": "Create deployment environment",
              "description": "",
              "href": "/deployment-environments",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/deployment_environment/properties/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "name",
                          "deploy_adapter",
                          "spider_enabled",
                          "frontend_url",
                          "deploy_settings",
                          "build_on_scheduled_publications"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/name"
                          },
                          "webhook_token": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/webhook_token"
                          },
                          "deploy_adapter": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/deploy_adapter"
                          },
                          "spider_enabled": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/spider_enabled"
                          },
                          "frontend_url": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/frontend_url"
                          },
                          "build_on_scheduled_publications": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/build_on_scheduled_publications"
                          },
                          "deploy_settings": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/deploy_settings"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/deployment_environment"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update deployment environment",
              "description": "",
              "href": "/deployment-environments/{(%2Fschemata%2Fdeployment_environment%23%2Fdefinitions%2Fdeployment_environment%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/deployment_environment/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/deployment_environment/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/name"
                          },
                          "deploy_adapter": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/deploy_adapter"
                          },
                          "spider_enabled": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/spider_enabled"
                          },
                          "frontend_url": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/frontend_url"
                          },
                          "build_on_scheduled_publications": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/build_on_scheduled_publications"
                          },
                          "deploy_settings": {
                            "$ref": "#/definitions/deployment_environment/definitions/attributes/properties/deploy_settings"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/deployment_environment"
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "trigger",
              "title": "Trigger a deploy",
              "description": "",
              "href": "/deployment-environments/{(%2Fschemata%2Fdeployment_environment%23%2Fdefinitions%2Fdeployment_environment%2Fdefinitions%2Fidentity)}/trigger"
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a deployment environment",
              "description": "",
              "href": "/deployment-environments/{(%2Fschemata%2Fdeployment_environment%23%2Fdefinitions%2Fdeployment_environment%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/deployment_environment"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Deployment environment",
          "description": "Configuration for different deployment environments. You can have different staging and production environments in order to test your site before final deploy",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/deployment_environment/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/deployment_environment/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/deployment_environment/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^deployment_environment$",
              "example": "deployment_environment"
            },
            "id": {
              "description": "ID of deployment_environment",
              "type": "string",
              "example": "1822"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "deploy_adapter",
                "deploy_settings",
                "last_deploy_at",
                "last_build_at",
                "deploy_status",
                "webhook_token",
                "webhook_url",
                "scrape_status",
                "frontend_url",
                "spider_enabled",
                "build_on_scheduled_publications"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the environment",
                  "example": "Production"
                },
                "deploy_adapter": {
                  "type": "string",
                  "description": "The deploy adapter",
                  "example": "netlify"
                },
                "deploy_settings": {
                  "type": "object",
                  "description": "Additional configuration for deploy",
                  "example": {
                    "trigger_url": "https://api.netlify.com/build_hooks/XXX",
                    "site_id": "XXX",
                    "access_token": "YYY",
                    "branch": "master"
                  }
                },
                "last_build_at": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Timestamp of the last build",
                  "example": "2017-03-30T09:29:14.872Z"
                },
                "last_deploy_at": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Timestamp of the last deploy",
                  "example": "2017-03-30T09:29:14.872Z"
                },
                "deploy_status": {
                  "type": "string",
                  "description": "Status of last deploy",
                  "example": "success"
                },
                "webhook_token": {
                  "type": "string",
                  "description": "Unique token of the webhook",
                  "example": "xA1239ajsk123"
                },
                "webhook_url": {
                  "type": "string",
                  "description": "Notification webhook URL",
                  "example": "https://webhooks.datocoms.com/xA1239ajsk123/deploy-results"
                },
                "scrape_status": {
                  "type": "string",
                  "description": "Status of site scraper",
                  "example": "success"
                },
                "frontend_url": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Public url of the site",
                  "example": "https://www.mywebsite.com/"
                },
                "build_on_scheduled_publications": {
                  "type": "boolean",
                  "description": "Deploy on scheduled publication",
                  "example": true
                },
                "spider_enabled": {
                  "type": "boolean",
                  "description": "Enable scraper on the site",
                  "example": true
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/deployment_environment/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/deployment_environment/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/deployment_environment/definitions/attributes"
            }
          }
        },
        "item_type_filter": {
          "position": 14,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Create a new filter",
              "description": "",
              "href": "/item-type-filters",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item_type_filter/definitions/type"
                      },
                      "attributes": {
                        "$ref": "#/definitions/item_type_filter/definitions/attributes"
                      },
                      "relationships": {
                        "$ref": "#/definitions/item_type_filter/definitions/relationships"
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type_filter"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a filter",
              "description": "",
              "href": "/item-type-filters/{(%2Fschemata%2Fitem_type_filter%23%2Fdefinitions%2Fitem_type_filter%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/item_type_filter/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/item_type_filter/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "description": "JSON API attributes",
                        "required": [
                          "name",
                          "filter"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "$ref": "#/definitions/item_type_filter/definitions/attributes/properties/name"
                          },
                          "filter": {
                            "$ref": "#/definitions/item_type_filter/definitions/attributes/properties/filter"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type_filter"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all filters",
              "description": "",
              "href": "/item-type-filters",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/item_type_filter"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a filter",
              "description": "",
              "href": "/item-type-filters/{(%2Fschemata%2Fitem_type_filter%23%2Fdefinitions%2Fitem_type_filter%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type_filter"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a filter",
              "description": "",
              "href": "/item-type-filters/{(%2Fschemata%2Fitem_type_filter%23%2Fdefinitions%2Fitem_type_filter%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/item_type_filter"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Model filter",
          "description": "In DatoCMS you can create filters to help you (and other editors) quickly search for records",
          "type": "object",
          "required": [
            "type",
            "id",
            "relationships",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/item_type_filter/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/item_type_filter/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/item_type_filter/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^item_type_filter$",
              "example": "item_type_filter"
            },
            "id": {
              "description": "ID of filter",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name",
                "filter"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the filter",
                  "example": "Draft posts"
                },
                "filter": {
                  "type": "object",
                  "description": "The actual filter",
                  "example": {
                    "status": {
                      "eq": "draft"
                    }
                  }
                },
                "shared": {
                  "type": "boolean",
                  "description": "Whether it's a shared filter or not",
                  "example": true
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "item_type"
              ],
              "additionalProperties": false,
              "properties": {
                "item_type": {
                  "type": "object",
                  "description": "Model associated with the filter",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/item_type/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/item_type_filter/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/item_type_filter/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/item_type_filter/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/item_type_filter/definitions/relationships"
            }
          }
        },
        "job": {
          "position": 15,
          "links": [],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Asyncronous job",
          "description": "",
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/job/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/job/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/job/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^job$",
              "example": "job"
            },
            "id": {
              "description": "ID of job",
              "type": "string",
              "example": "4235"
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/job/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/job/definitions/id"
            }
          }
        },
        "site_invitation": {
          "position": 16,
          "links": [
            {
              "method": "POST",
              "rel": "create",
              "title": "Invite a new user",
              "description": "",
              "href": "/site-invitations",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/site_invitation/definitions/type"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "email"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "email": {
                            "$ref": "#/definitions/site_invitation/definitions/attributes/properties/email"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "role"
                        ],
                        "properties": {
                          "role": {
                            "$ref": "#/definitions/site_invitation/definitions/relationships/properties/role"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site_invitation"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update an invitation",
              "description": "",
              "href": "/site-invitations/{(%2Fschemata%2Fsite_invitation%23%2Fdefinitions%2Fsite_invitation%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/site_invitation/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/site_invitation/properties/id"
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "role": {
                            "$ref": "#/definitions/site_invitation/definitions/relationships/properties/role"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site_invitation"
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all invitations",
              "description": "",
              "href": "/site-invitations",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/site_invitation"
                    }
                  }
                }
              }
            },
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve an invitation",
              "description": "",
              "href": "/site-invitations/{(%2Fschemata%2Fsite_invitation%23%2Fdefinitions%2Fsite_invitation%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site_invitation"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete an invitation",
              "description": "",
              "href": "/site-invitations/{(%2Fschemata%2Fsite_invitation%23%2Fdefinitions%2Fsite_invitation%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/site_invitation"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Invitation",
          "description": "A DatoCMS administrative area can be accessed by multiple people. Every invitation is linked to a specific Role, which describes what actions it will be able to perform once the user will register.",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/site_invitation/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/site_invitation/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/site_invitation/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^site_invitation$",
              "example": "site_invitation"
            },
            "id": {
              "description": "ID of invitation",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "email"
              ],
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email",
                  "example": "mark.smith@example.com"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "role"
              ],
              "additionalProperties": false,
              "properties": {
                "role": {
                  "type": "object",
                  "description": "Role",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/role/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/site_invitation/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/site_invitation/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/site_invitation/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/site_invitation/definitions/relationships"
            }
          }
        },
        "editing_session": {
          "position": 17,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all editing sessions",
              "private": true,
              "description": "",
              "href": "/editing-sessions",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/editing_session"
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Allows all actions on editing sessions",
              "description": "",
              "private": true,
              "href": "/editing-sessions/{(%2Fschemata%2Fediting_session%23%2Fdefinitions%2Fediting_session%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "anyOf": [
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "relationships"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type",
                            "pattern": "^editing_session_enter_item$",
                            "example": "editing_session_enter_item"
                          },
                          "relationships": {
                            "description": "JSON API relationships",
                            "type": "object",
                            "required": [
                              "item"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "item": {
                                "$ref": "#/definitions/editing_session/definitions/relationships/properties/active_item"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "relationships"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type",
                            "pattern": "^editing_session_take_over_item$",
                            "example": "editing_session_take_over_item"
                          },
                          "relationships": {
                            "description": "JSON API relationships",
                            "type": "object",
                            "required": [
                              "item"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "item": {
                                "$ref": "#/definitions/editing_session/definitions/relationships/properties/active_item"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "type",
                          "relationships"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type",
                            "pattern": "^editing_session_lock_item$",
                            "example": "editing_session_lock_item"
                          },
                          "relationships": {
                            "description": "JSON API relationships",
                            "type": "object",
                            "required": [
                              "item"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "item": {
                                "$ref": "#/definitions/editing_session/definitions/relationships/properties/active_item"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "type": {
                            "type": [
                              "string"
                            ],
                            "description": "JSON API type",
                            "pattern": "^editing_session_unlock_item$",
                            "example": "editing_session_unlock_item"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/editing_session"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete an editing session",
              "description": "",
              "private": true,
              "href": "/editing-sessions/{(%2Fschemata%2Fediting_session%23%2Fdefinitions%2Fediting_session%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/editing_session"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Editing session",
          "description": "Session track users movements in the administrative area, and allows locking a record when editing it.",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/editing_session/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/editing_session/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/editing_session/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^editing_session$",
              "example": "editing_session"
            },
            "id": {
              "description": "UUID of presence",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "last_activity_at": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "User entered at",
                  "example": "2019-03-30T09:29:14.872Z"
                },
                "locked_at": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "User locked record at",
                  "example": "2019-03-30T09:29:14.872Z"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "required": [
                "editor"
              ],
              "additionalProperties": false,
              "properties": {
                "active_item": {
                  "type": "object",
                  "description": "The active item in the session",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/item/definitions/data"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "active_item_type": {
                  "type": "object",
                  "description": "The item type of the active item in the session",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/item_type/definitions/data"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "editor": {
                  "description": "The entity (account/editor/access token) who has accessed the record",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/account/definitions/data"
                        },
                        {
                          "$ref": "#/definitions/access_token/definitions/data"
                        },
                        {
                          "$ref": "#/definitions/user/definitions/data"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/editing_session/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/editing_session/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/editing_session/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/editing_session/definitions/relationships"
            }
          }
        },
        "sso_settings": {
          "position": 18,
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve SSO Settings",
              "description": "",
              "href": "/sso-settingss",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/sso_settings"
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update SSO Settings",
              "description": "",
              "href": "/sso-settings",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/sso_settings/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/sso_settings/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "required": [
                          "idp_saml_metadata_url"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "idp_saml_metadata_url": {
                            "$ref": "#/definitions/sso_settings/definitions/attributes/properties/idp_saml_metadata_url"
                          }
                        }
                      },
                      "relationships": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "default_role"
                        ],
                        "properties": {
                          "default_role": {
                            "$ref": "#/definitions/sso_settings/definitions/relationships/properties/default_role"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/sso_settings"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "SSO Settings",
          "description": "Represents the Single Sign-on settings of the current DatoCMS project",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/sso_settings/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/sso_settings/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/sso_settings/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^sso_settings$",
              "example": "sso_settings"
            },
            "id": {
              "description": "ID",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "idp_saml_metadata_url"
              ],
              "additionalProperties": false,
              "properties": {
                "idp_saml_metadata_url": {
                  "type": "string",
                  "description": "URL of Identity Provider SAML Metadata endpoint",
                  "example": "https://my-org.oktapreview.com/app/XXXX/sso/saml/metadata"
                },
                "scim_api_token": {
                  "type": "string",
                  "description": "Security token required by Identity Providers",
                  "example": "3d32bde700a93a79088db34a0xxx60"
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "default_role": {
                  "type": "object",
                  "description": "The default role assigned to SSO users that do not belong to any SSO group",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/role/definitions/data"
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/sso_settings/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/sso_settings/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/sso_settings/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/sso_settings/definitions/relationships"
            }
          }
        },
        "sso_user": {
          "position": 19,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all users",
              "description": "",
              "href": "/sso-users",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/sso_user"
                    }
                  }
                }
              }
            },
            {
              "method": "POST",
              "rel": "sync_sso_users",
              "title": "Copy editors as SSO users",
              "description": "Copy existing users into SSO users",
              "required": [
                "data"
              ],
              "href": "/sso-users/sync-users",
              "targetSchema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/sso_user"
                    }
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a SSO user",
              "description": "",
              "href": "/sso-users/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fuser%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/sso_user"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Single Sign-On user",
          "description": "A Single Sign-On user exists when a DatoCMS project is connected to an external Identity Provider. An SSO user will not use the standard login procedure but has to go through SAML authentication. It can also be linked to one or more IdP groups.",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/sso_user/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/sso_user/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/sso_user/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^sso_user$",
              "example": "sso_user"
            },
            "id": {
              "description": "ID of user",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "username"
              ],
              "additionalProperties": false,
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Email",
                  "example": "mark.smith@example.com"
                },
                "external_id": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Identity provider ID",
                  "example": "Ja23ekjhsad"
                },
                "is_active": {
                  "type": "boolean",
                  "description": "Whether this user is active on the identity provider. De-activated users won't be able to login."
                },
                "first_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "First name",
                  "example": "Mark"
                },
                "last_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Last name",
                  "example": "Smith"
                },
                "emails": {
                  "type": "array",
                  "description": "SCIM-formatted emails",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "value",
                      "primary"
                    ],
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "primary": {
                        "type": "boolean"
                      }
                    }
                  },
                  "example": [
                    {
                      "type": "work",
                      "value": "m.smith@datocms.com",
                      "primary": true
                    }
                  ]
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "groups": {
                  "type": "object",
                  "description": "All the users's groups",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/sso_group/definitions/data"
                      }
                    }
                  }
                },
                "role": {
                  "type": "object",
                  "description": "The user role",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/role/definitions/data"
                        },
                        {
                          "type": [
                            "null"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/sso_user/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/sso_user/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/sso_user/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/sso_user/definitions/relationships"
            }
          }
        },
        "sso_group": {
          "position": 20,
          "links": [
            {
              "method": "GET",
              "rel": "instances",
              "title": "List all SSO groups",
              "description": "",
              "href": "/sso-groups",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/sso_group"
                    }
                  }
                }
              }
            },
            {
              "method": "PUT",
              "rel": "update",
              "title": "Update a SSO group",
              "description": "",
              "href": "/sso-groups/{(%2Fschemata%2Fsso_group%23%2Fdefinitions%2Fsso_group%2Fdefinitions%2Fidentity)}",
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "type",
                      "id",
                      "attributes",
                      "relationships"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "type": {
                        "$ref": "#/definitions/sso_group/properties/type"
                      },
                      "id": {
                        "$ref": "#/definitions/sso_group/properties/id"
                      },
                      "attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "priority"
                        ],
                        "properties": {
                          "priority": {
                            "$ref": "#/definitions/sso_group/definitions/attributes/properties/priority"
                          }
                        }
                      },
                      "relationships": {
                        "$ref": "#/definitions/sso_group/properties/relationships"
                      }
                    }
                  }
                }
              },
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/sso_group"
                  }
                }
              }
            },
            {
              "method": "DELETE",
              "rel": "destroy",
              "title": "Delete a group",
              "description": "",
              "href": "/sso-groups/{(%2Fschemata%2Fsso_group%23%2Fdefinitions%2Fsso_group%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/sso_group"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "type": "object",
          "title": "Single Sign-On group",
          "description": "A Single Sign-On group exists when a DatoCMS project is connected to an Identity Provider. These groups can be used to link DatoCMS roles to the Identity Provider's groups.",
          "required": [
            "type",
            "id",
            "relationships"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "description": "JSON API data",
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/sso_group/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/sso_group/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/sso_group/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^sso_group$",
              "example": "sso_group"
            },
            "id": {
              "description": "ID of group",
              "type": "string",
              "example": "312"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "name"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the group",
                  "example": "Admin"
                },
                "priority": {
                  "type": "integer",
                  "description": "When an user belongs to multiple groups, the role associated to the group with the highest priority will be used",
                  "example": 1
                }
              }
            },
            "relationships": {
              "description": "JSON API links",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "role": {
                  "type": "object",
                  "description": "Sso Group's role",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/role/definitions/data"
                    }
                  }
                },
                "users": {
                  "type": "object",
                  "description": "Group members",
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/sso_user/definitions/data"
                      }
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/sso_group/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/sso_group/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/sso_group/definitions/attributes"
            },
            "relationships": {
              "$ref": "#/definitions/sso_group/definitions/relationships"
            }
          }
        },
        "job_result": {
          "position": 21,
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "title": "Retrieve a job result",
              "description": "",
              "href": "/job-results/{(%2Fschemata%2Fjob_result%23%2Fdefinitions%2Fjob_result%2Fdefinitions%2Fidentity)}",
              "targetSchema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "$ref": "#/definitions/job_result"
                  }
                }
              }
            }
          ],
          "$schema": "http://json-schema.org/draft-04/hyper-schema",
          "title": "Job result",
          "description": "Some API endpoint give results asyncronously, returning the ID of a job",
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "additionalProperties": false,
          "definitions": {
            "data": {
              "type": "object",
              "description": "JSON API data",
              "required": [
                "type",
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "$ref": "#/definitions/job_result/properties/type"
                },
                "id": {
                  "$ref": "#/definitions/job_result/properties/id"
                }
              }
            },
            "identity": {
              "$ref": "#/definitions/job_result/properties/id"
            },
            "type": {
              "description": "JSON API type field",
              "type": [
                "string"
              ],
              "pattern": "^job_result$",
              "example": "job_result"
            },
            "id": {
              "description": "ID of job result",
              "type": "string",
              "example": "34"
            },
            "attributes": {
              "description": "JSON API attributes",
              "type": "object",
              "required": [
                "status",
                "payload"
              ],
              "additionalProperties": false,
              "properties": {
                "status": {
                  "type": "integer",
                  "description": "Status of delayed HTTP response",
                  "example": 200
                },
                "payload": {
                  "type": [
                    "null",
                    "object"
                  ],
                  "description": "JSON API response of the HTTP request",
                  "example": {
                    "data": {
                      "id": 999,
                      "type": "item_type",
                      "attributes": {
                        "some": "attributes"
                      }
                    }
                  }
                }
              }
            }
          },
          "properties": {
            "type": {
              "$ref": "#/definitions/job_result/definitions/type"
            },
            "id": {
              "$ref": "#/definitions/job_result/definitions/id"
            },
            "attributes": {
              "$ref": "#/definitions/job_result/definitions/attributes"
            }
          }
        }
      }
    },
    "rawHeaders": [
      "Last-Modified",
      "Sat, 05 Oct 2019 20:09:05 GMT",
      "Content-Type",
      "application/json",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Content-Length",
      "300377"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "GET",
    "path": "/site",
    "body": "",
    "status": 200,
    "response": [
      "1f8b08002b1b995d0003",
      "6c544d6fda4010fd2b68cf36c53606c38daaa994aaa7546a0f51b41aecc5deb21fce7ec47110ffbdb30413e202173c6fdecc9b37630ea40207647d20bc226b922c96b3058988eb5b868f963b864fe09ce15bef980d890a64c0ee9563b501c7b59a28d64d1075933341e81244c87e244c9127acd7b0403a20526bb2565e88083b9b3d2db5d0262086a180621691adf098ba2cb0af681bd496e679446ac3b0d43a9f1fb13caf1b3762a6e96aa0a6797a939bce574886b2646acc5ee61772b2b8494e5681dc1a2ec1f4e3ded962a02fe637d945714476a52570358ccfd140a340d0217c8a9c2d8dd1d238581a074be3a4984225b99ae2b67429edb4d4127daeb5ae05a3125a4ba1e5d4e97de84636f76ff0abffda94fb8dcc1e9a1fcfb3faaedbfdc97ec33cfd9e3df4d5dfcea4df36a182d05b9460d9652b3b78e1a5bea8549a7255b157b2de81b00c71a351a6aaa837e2328aacf92b6db475d8bcebba41660cd63237a8b556530b526041eeaee902aca3e10e69d980aa1905f719f2b2bd8aa121d2e20abcc2101e8ce392bd69158ef2ce1bddb22f3fb5aa708408d7f3ecb96134ddc1798063088a93c7b6e1ede9a2f124de8b1d466f4392e6576fc3901656e92d33f683f0f8747c9fef565c32e5e949f40808311a8a8f01a3c5a7d8594f9666c5ec434fc822c7e80a4cc6602856b156e85e86a367ea85e3fac2ef714b6fa166ff3b10cfaebee37f07bfb5a5e16df012d7215b7475cb05773d5a849f7f000000ffff",
      "03005d3de8f85c040000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "24",
      "ETag",
      "W/\"f82c6cdc405c54dded53eafadb4a9e6b\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "fc69cac0-6537-4aea-93e7-7f398bd80c6c",
      "X-Runtime",
      "0.053117",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/upload-requests",
    "body": {
      "data": {
        "type": "upload_request",
        "attributes": {
          "filename": "favicon.ico"
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002b1b995d0003",
      "7c4f5d4b033110fc2f07fa64ee92dce5ae2d1c72d64aab58908a96bec85eb2b681fb32c9596de97f3785b68fbe0cc3ecececec3e50e02018ed03ad825110b134a369c444466326a860e413beb56c9bd0437013b8df0ebdadefaa16d487c1af1eadf33a386774d93bb4c7a8de54deb471aeb3a328f2075aa26b58a30d6d1c624fb67e89b0106ad8b50d6c6d28dbfadfcbb73f04ea1d0159e55d5f565a1283a0ae97a4f06a51ad5ba3dda6ce8bf74542a6cfc5982ca60517e9c93036a8b0711aaabc789a15b3f9f265c957f3e57c72377e7b2caef803a76cc828159e5eea796e630fbe5f72fef414780f0ef3f3ce2be77116b3d56936f9e9b4419b0f293d290bbd6e504d7d613436dfb49798e3005c6f3057318f3907218799620964920a1462a094e2290e5026284a2863cebc054a9908c520196402640609976970381cfe000000ffff",
      "03003db106e0ca010000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "22",
      "ETag",
      "W/\"4ec0c79f97d550870c2bd16a1743224b\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "0c7898df-54a1-49d9-b55f-2b9df00e6fe1",
      "X-Runtime",
      "0.044523",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/upload-requests",
    "body": {
      "data": {
        "type": "upload_request",
        "attributes": {
          "filename": "dato-logo.jpg"
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002b1b995d0003",
      "844f5d4bc34010fc2f017df292fbc8e5a31024d64aab58908a86bec8267749234913ef2e545bfadfbd4ada575f9661667676f6e00830e04c0e4e2d9c89e39120c48147788819e1981364e50e355dd5b99f7de5dc38e6a797d638f44d07e243c9af416a63793046d5f960a43e850daab1a68d31bd9e78de5f46dd4225b5ab992b07b4b34b88b8d0c2bedbc24ebb45d7fe73fbf61b41bb475034493fe44d5d2025415c6728b56cda549daacda64dd2f7958fe6cfe914ade629e5c168982a29e4d6d4d024e9d3225d2cb3978cae97d97276377d7b4cafe803c5242618730b2f052dd6cc0edbd03fff3a06de8391c979e795521632b21eb5d9775f2ba99318e39159d5d5568ab92d2c954e36dd25e6248019944c2088592c225110c67810f9a2f4814119e540c3c20f4114bce48205987211308e439ccbb064a595684c49e41c8fc75f000000ffff",
      "030067eba95dce010000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "23",
      "ETag",
      "W/\"c89b1b73ad50c9f6424beb651e5f89a6\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "aab6e8f0-d46c-484e-aa1a-74aa76d5cede",
      "X-Runtime",
      "0.044878",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "PUT",
    "path": "/site",
    "body": {
      "data": {
        "type": "site",
        "id": "16706",
        "attributes": {
          "no_index": false,
          "favicon": null,
          "global_seo": null,
          "name": "Integration new test site",
          "theme": {
            "logo": null,
            "primary_color": {
              "red": 127,
              "green": 127,
              "blue": 127,
              "alpha": 127
            },
            "light_color": {
              "red": 63,
              "green": 63,
              "blue": 63,
              "alpha": 63
            },
            "dark_color": {
              "red": 0,
              "green": 0,
              "blue": 0,
              "alpha": 0
            },
            "accent_color": {
              "red": 255,
              "green": 255,
              "blue": 255,
              "alpha": 255
            }
          },
          "locales": [
            "en",
            "it"
          ],
          "timezone": "Europe/London",
          "sso_saml_init_url": null,
          "require_2fa": false
        },
        "relationships": {}
      }
    },
    "status": 200,
    "response": [
      "1f8b08002b1b995d0003",
      "6c54db6edb300cfd9542cf75e64b93b679ebb00ee8b0a76ed8801585c0d88cad551757929ba641fe7da463a799b7e485b7431d1d52de890a2288e54ea84a2c45b6b84c17e25cc46d8be40615913c88d1ab55173170a105c3b93b1bb1f61095b367163767948d670340bb1234573f08b4e4ab281ea969838cdc89d62b037e2b4ba79de780473a3ccb2fcf45ed9110077ba53b1c4cd06d03bdbd27a72cd1c6093a9fcf8fe8de3ea07b7340934d68adea660a5e14472c9b07285b03725110b002ff34c1a547583aa2d22328e5c35cedc4d2765a73036740d9834b9a907ede829663b88f0c8a26a468c28a26ac68925dcda032cace6858ae3461563a43b2d6ced51aa581364868958cee89b9889bbb37f8b6fdd8944f37a6b86fbe3ca7f5ed66fdb3f80117f9e7e27e5bfddef8fcd30d77d06e451402ba91d61a5e54e98e2cad93ca56f82a966bd00129ef1dd1b495ecbc3e5ec5d4ea55362e443a7cb3d98c34130801e3c836042703184d0d553c856b0851f21acab2015ba304ee93a7d97592a5493aff9ee7cbe2725964b38b79f64b8c80ceb47de5c021a209349ecec67e0851197c739637f5b6f3aec50f5f9dad1c6fa3c7e74e7994f91a866bed39a87be543a3da7ecd69cb0ecd76932792e5f393273296eda94717d08777c0c3e3fe70ebffc50dda4ef6a427098e496e3e4d78a7ff8a0d7c8abcb84adff97095d89f9f24b369929b55d86ab735fc8ed0be281a2adbd323bb0035feab40929efca79f8c6e154aaf5ad692c6615a5275a5b48a5b92887e7f000000ffff",
      "03000169e19b71040000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "21",
      "ETag",
      "W/\"832b89ca4e41d971f6c96fe807039b58\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "eba1a18a-4e30-4054-8d83-3270f566eade",
      "X-Runtime",
      "0.090047",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/item-types",
    "body": {
      "data": {
        "type": "item_type",
        "attributes": {
          "name": "Article",
          "api_key": "article",
          "singleton": false,
          "all_locales_required": false,
          "sortable": false,
          "modular_block": false,
          "draft_mode_active": false,
          "tree": false,
          "ordering_direction": null
        },
        "relationships": {
          "ordering_field": {
            "data": null
          },
          "title_field": {
            "data": null
          }
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002b1b995d0003",
      "6c90cf6ec33008c6dfc5e75cf6efb0dcf61cd384a84d5654127b984caaaabcfb70da6691369f301f3fe0e312121a86fe1238853e3c3c3f3ebdbc862ed8b990ffd9688435ee029a291f66a3daca271c5bc19b1a476972e5e953c8f214fa01a59267b21a1e5cbc27b0309ce8ec186e58d644ea2824568ac68d9f66115f41e9171d739a05150e92e369cb26c5c1c0350274f67b374a04bc14852a287dcdde3c6d62cc22d75980a5102ae1149b9b98c7e28d7cad2356d81c413bc38d5ebaa024d8e07ae4b2de626092b446d763be7f2cbb7bdce8bbd8cc2d3bdf2bfc473636a17f357f3f000000ffff",
      "0300daea99fab5010000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "20",
      "ETag",
      "W/\"445555eac531c7fc3f2604af83c9f482\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "645682a6-1dd7-4244-9166-48daa06d6e84",
      "X-Runtime",
      "0.059858",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/item-types/142359/fields",
    "body": {
      "data": {
        "type": "field",
        "attributes": {
          "label": "Title",
          "field_type": "string",
          "api_key": "title",
          "localized": true,
          "validators": {
            "required": {}
          }
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002b1b995d0003",
      "8452c16e83300cfd979c398cad9b546efb87ddaa2a32c4ac514dc21253a943fcfb1ca0b032a9cbcd7eb69ffd5e7a65804115bdb24615ea2d7fdaed739529beb628716d918c84c01c6cd931c6544a502209fa619950d0b14acf2d512add67ea69ad3ee355523cd79dac6355b88e2853e42b20fb8dc2caa1c34c5d24945d7c1829027e753624b41f864cb53e5ab6dea9224f835b8480e02a4ca568ac742566e125d4645d226b2140838cd3bc1382496b153550449908c67827d0e12881c11a3a622d3b74386d28d9800489349e6c3b0eb18ccd7c667faf5bbe7b7e79ddafbaad95c390f6b7aea2cea4730eff766cd576728614bc07b6d528e374272735c66b24e3034329e02db16a0f4b9b0f069335da88b0d5a4e6e405075c5b1b6f3a82a04b71e8bc644d809ab560a8417a2fbfa888f4682646bdba368395279ab8f49d6b0234ad0c4a9f02a25e2ed24986d5a43f0e8c3f2daef21f1efedb2179bb9d7d6b9d4d5e54995ab6f0f875b7d8635279c7e1070000ffff",
      "03002b5c543d58030000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "19",
      "ETag",
      "W/\"ff1755a043d7d4c70c572caa277bdf97\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "d9490482-f23d-45d9-ae93-87671b193262",
      "X-Runtime",
      "0.071665",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "https://dato-images.s3.eu-west-1.amazonaws.com:443",
    "method": "PUT",
    "path": "/16706/1570315051-favicon.ico?x-amz-acl=public-read&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAINXQX2ZNXNEBCVJA%2F20191005%2Feu-west-1%2Fs3%2Faws4_request&X-Amz-Date=20191005T223731Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Signature=d32322a5c97d14a7c05e558ddd26e8ec4e5bab321a5cabc45d1a4875ac7a42c6",
    "body": "00000100010010100000010020006804000016000000280000001000000020000000010020000000000000040000120b0000120b00000000000000000000000000ff000000ff000000ff000000ff020303ff000000ff040505ff060908ff000000ff080b0aff030403ff020303ff000000ff000000ff000000ff000000ff000000ff010201ff010202ff000000ff000000ff030404ff151b19ff31423dff050707ff2a3733ff1c2523ff2e3d39ff18201eff000000ff010101ff000000ff000000ff000000ff000000ff000000ff4a635bff2e3e39ff000000ff0e1211ff030303ff040505ff040605ff1a2320ff202c28ff000000ff010101ff000000ff000000ff1c2623ff1b2522ff1c2623ff80ab9eff0f1412ff000000ff000101ff000000ff000101ff000000ff010101ff1c2623ff000000ff000000ff000000ff000000ff72988cff6f9589ff384b45ff5b7a71ff010101ff0c100eff000000ff000100ff000000ff010101ff000000ff131a18ff020303ff000000ff000000ff030404ff81aaa0ff000000ff516b63ff506962ff000000ff0c100fff000000ff020302ff020202ff010201ff000000ff171e1dff030504ff000000ff000000ff000000ff628379ff89b7a9ff83afa2ff141b19ff020303ff0c0f0eff000000ff000000ff000000ff000000ff090c0bff33443fff030404ff000000ff000000ff000000ff060807ff526e65ff24302cff000000ff101514ff19211fff1d2724ff2a3934ff1e2926ff0c110fff050706ff0b0f0eff111615ff000000ff000000ff000000ff010101ff000000ff000000ff060707ff0e1211ff56736aff3a4f48ff618278ffb3f0deffa8e1d0ff90c1b2ff384b45ff364842ff070908ff000000ff000000ff000100ff030404ff010202ff000000ff19211fff40544fff435952ff1b2522ffb1ecdbffceffffff6f9589ff2c3b36ff3e524dff040505ff000000ff000000ff000000ff000000ff000000ff070908ff131a18ff5f7f75ff4d675fff59786eff95c8b8ffa3dacaff94c6b7ff57756cff273430ff020202ff000000ff000000ff000000ff010101ff000000ff121917ff0e1311ff040505ff070a09ff090c0cff000000ff040505ff25312dff26332fff24302cff000000ff010101ff000000ff000000ff000101ff000000ff0b0e0dff090b0bff000000ff080b0aff010101ff020202ff010101ff000000ff090c0bff1f2926ff000000ff010101ff000000ff000000ff000000ff000000ff050606ff090c0bff171f1dff222d29ff131918ff151b19ff171e1cff0e1211ff161e1bff19221fff000000ff010101ff000000ff000000ff000000ff000000ff000000ff111715ff0f1412ff000000ff000000ff000000ff000000ff090b0aff1c2623ff030404ff000000ff000000ff000000ff000000ff000000ff000000ff000000ff000000ff000000ff010101ff000101ff000000ff000000ff000101ff020303ff000000ff000000ff000000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "status": 200,
    "response": "",
    "rawHeaders": [
      "x-amz-id-2",
      "UD9u/NeMQW8YUJ/OGtg1y+xWd4294Ktp4apuZuYUrVRWnhj5gEJU9ecOERHSQiXl50O4vyaGneM=",
      "x-amz-request-id",
      "B4A0D3D989CB1D1D",
      "Date",
      "Sat, 05 Oct 2019 22:37:32 GMT",
      "ETag",
      "\"bd6eb7600ff2abf24eb1d5564bd4f788\"",
      "Content-Length",
      "0",
      "Server",
      "AmazonS3",
      "Connection",
      "close"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/item-types/142359/fields",
    "body": {
      "data": {
        "type": "field",
        "attributes": {
          "label": "Slug",
          "field_type": "slug",
          "api_key": "slug",
          "localized": false,
          "validators": {
            "required": {},
            "slug_title_field": {
              "title_field_id": "610491"
            }
          }
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002b1b995d0003",
      "8453cb52c3300cfc179f73a0a530436f7c03c70ee35163856aaac6c1963b4027ff8e9c84b80f067293568ff5ae72320e04ccfa64c899b5795cdcad9e96a632f2d9a1c60d213b0d4124d03609c65ccab04556f485d39b8243919d3ae298838eec1e3f4b6247ad98759b982bc3be06a62fd48d0d70c4ca1c3556223e0cf303be270a193ef5d530c00a09a31de968c559680bf185e9b5bef391847c6bd6cbcca34308086d8db90f1de992c2aa830007141cf7a6c0b60bd8d0c7c854878173be5570f3aa81c306128b55b609e792800c795fdc51378c21c1c324c7e952dec56a79fff054e42d957d9fa9535b7372f9e19b7f3bae4d69f5215af01c846ace70a4f68d51b21093cad10781ad823f89e212cc6d3e380cda6a9d5a508f428eb649c0d27af02e3104bb5533f773d60568c42a8616b4f778b68ad90ebe63b4c5df09ac3df3b8cb5e18a6c0a1d341f97e20daf94536cb3075ffe6c07018b1c8bf393fefc5f579f7d59fd7df67ebaf57ff4c9e6e60166dbed00bf8ea7a6f7fb95b4efabdf6df000000ffff",
      "0300af7915cd9e030000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "18",
      "ETag",
      "W/\"02e1a65fbb38d54a43a3a8e6bd722475\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "6d119c18-3528-4934-94bf-676f33cefdec",
      "X-Runtime",
      "0.065244",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/item-types/142359/fields",
    "body": {
      "data": {
        "type": "field",
        "attributes": {
          "label": "Image",
          "field_type": "file",
          "api_key": "image",
          "localized": false,
          "validators": {
            "required": {},
            "extension": {
              "predefined_list": "image"
            }
          }
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002b1b995d0003",
      "8453c16ec2300cfd979c7b18834d1ab71df70d0845a631c3c24dbac44563a8ff3ea7ed5ae826c6a9f6f38b9f9fcdc5381030eb8b2167d6e679f1b07a599ac2c8b9468df784ec34049148bb4630e552861db2a26f15bca3a25d951d299c7350933de2591334541dc88b59fb86b9301c4a60fa42edb9074e589893c62a25c4ae43c48f8662862f6d61f053d0270a3e43b5a6714f1e9d654a323668b5b00e89a4ab5b6605354244f025661e3ad2d727813544a850b06ba85c702e78fdde6c35d00ed0b05855d5602f5ab31119f2f3e94075279304ab61eecbad918bd5e3f2e9653272aa6cdbac947cc98dcb036efe65ccedf7aa5b0b5ea350d98d92c8bf334a9e7b70338528b053f02731ad03465a880ea352ad53abcbdeb77e3d1271a256c1350cd1ee7469c731eb22ecc52a8616947bba6ac56cbbfd62b2d31e07b00ccc7d2f7bb31f05aa5a1fca7702c98e13d96cc3c0fe6b03dde9a5c9fecdf5212fe687dc16d7f0e37df8d7dfa0cd973157f6d3783891d1d39e32878584718edd97acbf6dfb0d0000ffff",
      "030031238a6ea7030000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "16",
      "ETag",
      "W/\"ed50dd2b9639aaa4b08782407304e76d\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "5622cab8-7607-493a-a92d-046747438afb",
      "X-Runtime",
      "0.062210",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "https://dato-images.s3.eu-west-1.amazonaws.com:443",
    "method": "PUT",
    "path": "/16706/1570315051-dato-logo.jpg?x-amz-acl=public-read&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAINXQX2ZNXNEBCVJA%2F20191005%2Feu-west-1%2Fs3%2Faws4_request&X-Amz-Date=20191005T223731Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Signature=a6939d8dc1335684df4a3af8ba27c47adc5f5d36025d635070be7f3f47a29218",
    "body": "",
    "status": 200,
    "response": "",
    "rawHeaders": [
      "x-amz-id-2",
      "0wcCmS2l+blHvtfKOeTFw9NzTq1hnvrMIsHDQzDKs9F1ArmW1Sz+uYJ2O1lPEbUMIOijOL/cLBg=",
      "x-amz-request-id",
      "D2CA7DA373ED030C",
      "Date",
      "Sat, 05 Oct 2019 22:37:32 GMT",
      "ETag",
      "\"083fa09d981ad561a949816708befebc\"",
      "Content-Length",
      "0",
      "Server",
      "AmazonS3",
      "Connection",
      "close"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/item-types/142359/fields",
    "body": {
      "data": {
        "type": "field",
        "attributes": {
          "label": "File",
          "field_type": "file",
          "api_key": "file",
          "localized": false,
          "validators": {
            "required": {}
          }
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002b1b995d0003",
      "8452cb6e83400cfc973d73681ead94dc7ae94f44d1ca614d63c561e9ae899422febd5e2090d02ae5c47a3cf678ecc6381030dbc690335bf3b678596fd6263372ad50df05213b7d8248a0432d18532ac30159d10f6254b04bb223a38b4145f684d72970a452ccb6ac9933c33e07a66fd48e0570c4cc5cf4ad427ce8ea07fcaa2924b869dbcc543e92902fcd769d0a570801a1cc31a5a223654d6d2a087046c1ae9072c1395feaff6eaf0f8705d42c56bbd5d88bd1684086543e1ea9eada93e07918a779b467b15eae5e37933d5366db26a554e65cbb247cf72f636e6aa9ba35e13d08e5dd2891ca4f4649730f2e451f040e0ade0293cb30d27c7018946a9d5a98f7bef5b64bc0897af6ae6608f6a0cb388d5117a010ab185a50eee5ae15b3edf686d14efb19c0dc33f7bdecc37e1438575a28ed1fa21d27b2c98681fdd706ba8b8a93fdbbfbf35ccccfb3cdeee1e57378f51cfe75fb6d3a9cb9f09baee18246cb7bca1c1612c639f67c22fdf6ed0f000000ffff",
      "0300f20533339c030000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "15",
      "ETag",
      "W/\"5b955aa80fba672d04553c9840c30633\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "b95f1015-ed74-4a50-8f3a-26be9af0feb7",
      "X-Runtime",
      "0.068103",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "https://www.datocms.com:443",
    "method": "GET",
    "path": "/robots.txt",
    "body": "",
    "status": 200,
    "response": "User-Agent: DatoCmsSearchBot\nDisallow: /integrations\nDisallow: /use-cases\nDisallow: /pricing\n\nUser-agent: *\nSitemap: https://www.datocms.com/sitemap.xml\nDisallow:\n",
    "rawHeaders": [
      "Accept-Ranges",
      "bytes",
      "Cache-Control",
      "public, max-age=0, must-revalidate",
      "Content-Length",
      "163",
      "Content-Type",
      "text/plain; charset=UTF-8",
      "Date",
      "Sat, 05 Oct 2019 19:07:29 GMT",
      "Etag",
      "\"4c1fedbbbd06bb03574be3077a253f5d-ssl\"",
      "Referrer-Policy",
      "strict-origin",
      "Strict-Transport-Security",
      "max-age=31536000",
      "X-Content-Type-Options",
      "nosniff",
      "X-Frame-Options",
      "DENY",
      "X-Xss-Protection",
      "1; mode=block",
      "Age",
      "12603",
      "Connection",
      "close",
      "Server",
      "Netlify",
      "X-NF-Request-ID",
      "47070164-0743-48e7-b659-6c26ad5e5cc2-9108168"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/upload-requests",
    "body": {
      "data": {
        "type": "upload_request",
        "attributes": {
          "filename": "robots.txt"
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002c1b995d0003",
      "7c4fd16ac23014fd97c0f6b4d4246d522b94d139876e4c188eadf8326e9b5403aded9214ddc47f5f84eae35e2e8773ce3df7dc2392e0004d8e484b3441232a62224694c724a49c70864d5bb4ce06eee0d01d723f9df2aebeab5b905f467df7ca9e7970cee8a277ca9e937a537bd3d6b9ce4e46239fdf62ddc046d9c08681eaf1de2f611a4003bfed0ef63628dbe6bfc3f7070ccd2f86b24ebbbea875898d02799be3ccb359bd698d76db26cd3e57119ebf6653bc9a678c8bc130354aaa9dd350a7d9cb225b2cf3b79cad97f972f630fd78ce6ed8132334a184700fafed3cb6a11fbe5e747974087c04a7d2cbce3b63611cb2f5a0cd0e9d36caa6092103b3d29b9d92735f58199b6edb6bcc5900d71b958642503ae68554741c49124a5a099e7041a0a2bc8a78290ac6aa38a9585c96098c49c2289555194b0195141c9d4ea73f000000ffff",
      "03003c1f95d8c8010000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "13",
      "ETag",
      "W/\"4df3ac56706fae27e58e8040bf9ee900\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "c8cba938-c7ac-4753-a2ad-eded53edd937",
      "X-Runtime",
      "0.033778",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/uploads",
    "body": {
      "data": {
        "type": "upload",
        "attributes": {
          "path": "/16706/1570315051-favicon.ico"
        }
      }
    },
    "status": 202,
    "response": [
      "1f8b08002c1b995d0003",
      "aa564a492c4954b2aa56ca4c51b25232374b3431303736344fb33436313133303632314f334c3255d2512aa92c4805aac8ca4f52aaad05000000ffff",
      "0300238a42d137000000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "17",
      "Cache-Control",
      "no-cache",
      "X-Request-Id",
      "d33244b2-38da-485f-a6d3-396e4338f5de",
      "X-Runtime",
      "0.905998",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/uploads",
    "body": {
      "data": {
        "type": "upload",
        "attributes": {
          "path": "/16706/1570315051-dato-logo.jpg"
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002c1b995d0003",
      "94914d6ec3201085ef326bff801dc7b2cf9155abca9a046213814130c84aa3dcbd90a4d956dd20bde19b79cce306020961bc811230c2c006de0e50005d9d4c3a3a6d51248d445e1d23c990d9a0bed36dbfdfed0ad894a005c61d63052c52cd0bbd84c35c879aef7bb6af79d7b39677ace36572b4a5b6b3ad2e6e4eb3cfd61b4c5d7071326b8cb4580fe31ab52e60b50fd3a7385977f54f8f6741c833464dd359492d2623097ff7916b3e51bf5152a4e57b500c64cdf482eff70214fd87cf0d615206e784908f32215e2249313d5669181f4ace4ad61d9a666cfbb16d2adef08fb45ef43a010b910b635d6fdb56e5404e26941882a4509dacf93b34c239a5f2f955c011835cd1e4ef7a43905ef8030000ffff",
      "03000edbd959db010000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "14",
      "ETag",
      "W/\"e32d1a3ab79694197cf2a8a901d504fa\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "57f432cf-b296-495b-9094-27e1cbda9298",
      "X-Runtime",
      "0.901952",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "https://dato-images.s3.eu-west-1.amazonaws.com:443",
    "method": "PUT",
    "path": "/16706/1570315052-robots.txt?x-amz-acl=public-read&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAINXQX2ZNXNEBCVJA%2F20191005%2Feu-west-1%2Fs3%2Faws4_request&X-Amz-Date=20191005T223732Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Signature=3661185bde184d03d1f659560af15f45c6b22f79f27cc9a809211dfc7d6afd65",
    "body": "User-Agent: DatoCmsSearchBot\nDisallow: /integrations\nDisallow: /use-cases\nDisallow: /pricing\n\nUser-agent: *\nSitemap: https://www.datocms.com/sitemap.xml\nDisallow:\n",
    "status": 200,
    "response": "",
    "rawHeaders": [
      "x-amz-id-2",
      "Gl70UgBz2IBAWAgGvl6MWyg78tlmIZT0hfu3zJen37shAF4jNAHPM6FAsuh7qQ77FwoqXvcaePM=",
      "x-amz-request-id",
      "782240276EE6C005",
      "Date",
      "Sat, 05 Oct 2019 22:37:33 GMT",
      "ETag",
      "\"19f825b6a7bc65240e2de7460eafc0cf\"",
      "Content-Length",
      "0",
      "Server",
      "AmazonS3",
      "Connection",
      "close"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/uploads",
    "body": {
      "data": {
        "type": "upload",
        "attributes": {
          "path": "/16706/1570315052-robots.txt"
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002c1b995d0003",
      "9491d16e83300c45ffc5cf50121845f01d7bda342197841229212871c4baaaff3e53d66a6fd35e225df9f8dad7b9824242e8ae601474d08a56be08c8802e8b669d16eb51b146a2604e8974dcd868beb82a8f5506ab51344137276b3398b4394ff4500b6e1528e4b111c742d68da8642dea320ffee4291ee893d879f4c121f7c02e31d1e4c3c362f6f789bb18fc7209bf07283d62b2d48f465bd53b4df808a3e7ed45fb44c990d54fa314c9bbfe07bedd3230f41f7e6b88bd71786664441b3533412369d5dfa39442b6b914b9a85fcbb2ab9aae2a0f6dd3be71be142c0313d112bba258d7f5c0b67e7031c718355f65f0ee8f8b119ef926ef1f199c30ea19ddf6533b01bcdc37000000ffff",
      "0300e9f87c1bd3010000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "12",
      "ETag",
      "W/\"371598725e2cf8059b15dd0c9726d038\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "dd1a2000-645b-4361-b687-fb07e8904824",
      "X-Runtime",
      "0.267108",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/upload-requests",
    "body": {
      "data": {
        "type": "upload_request",
        "attributes": {
          "filename": "uploadable-image.png"
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002d1b995d0003",
      "8c4f5d6bc24010fc2f81f6a997dc87498c104a6a2dda52a158dae04bd9e4b63190afde5dd02afef79e187deecb32cccccece1e1c09069cc9c129a533713c168434f0981f52c17cea0bd277550b12b20a495943816ed714ce9d637e3bb4feb3faa5f0a7476d2c0fc6a832eb0dea5366af2a6bda18d3e989e7d94bed3944bb5ab8d893ad5d22cc851af66d035bede66dfdbf0af73b02f59e405ec55d9f55654e1482bc4d4962d9a42a5a559a4d1d279fab1199bf2653b29a27dc0f06c354a1c4c69450c5c9cb22592cd3b794af97e972f630fd784e6ef813a72c6294fa165e7b5aac851db6e8e8f2f210f80806e3cbce3be72214623d68b35d572ad47144e9c0accaa24139b78551e978d35e634e02985e61ccf250fa99cc848ca28003c0980aa04c7cd330678c660019862c087884106518f963ce4622671cc718725f38c7e3f10f0000ffff",
      "0300b010c077dc010000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "29",
      "ETag",
      "W/\"15c91ec605b2d055f29df5d9414b2cd2\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "3d715a16-4e6f-4c34-9e88-7fd7521d6b0b",
      "X-Runtime",
      "0.039766",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "https://dato-images.s3.eu-west-1.amazonaws.com:443",
    "method": "PUT",
    "path": "/16706/1570315053-uploadable-image.png?x-amz-acl=public-read&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAINXQX2ZNXNEBCVJA%2F20191005%2Feu-west-1%2Fs3%2Faws4_request&X-Amz-Date=20191005T223733Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Signature=1c7d5bdb3d9962aaa803a013f07c110baabe716629ea9be9582143c12e8e7253",
    "body": "",
    "status": 200,
    "response": "",
    "rawHeaders": [
      "x-amz-id-2",
      "zs9segdLysZRGacjWardz0S7imAiytQk3IvXA0PltZaEJHovxA7hg+SK+M5xoQKQ857NJ5sQXNE=",
      "x-amz-request-id",
      "B41DE7AECD5954DD",
      "Date",
      "Sat, 05 Oct 2019 22:37:34 GMT",
      "ETag",
      "\"9d7d0a54d0368643378e5fa7772f9c07\"",
      "Content-Length",
      "0",
      "Server",
      "AmazonS3",
      "Connection",
      "close"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "GET",
    "path": "/job-results/76a407317f9344603247f1b5",
    "body": "",
    "status": 404,
    "response": [
      "1f8b08002d1b995d0003",
      "24cac10ac2400c04d07fc9d953f5207b13a4c72d889e444aba09125053b2a920cbfebb5b3d0d33f30a103a42b816108200ddb69b767bd8807f666e1d6719d94cad4de86e322dce194281a4b482389cc77eb8c46303c48ef2f8bd4fce19ef2b382497379f38a95108ff8ceabd2e2f825aebad7e010000ffff",
      "0300e027507584000000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "28",
      "Cache-Control",
      "no-cache",
      "X-Request-Id",
      "f7d4b30f-ff68-41a7-b75e-5e78782f121f",
      "X-Runtime",
      "0.029361",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/uploads",
    "body": {
      "data": {
        "type": "upload",
        "attributes": {
          "path": "/16706/1570315053-uploadable-image.png"
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002e1b995d0003",
      "9491d16e83300c45ffc5cf01022965e43bf6b469426e71215242107184baaaffbe50b6ee757b89749d63df5ce7063d3282be81e941432bdbf2508200bece94749cadc73e69645ecc2932858d0de633dd5695920701abe979047daca58091cc303268d5be089871ab43511e1b792ccaba91aaac65adb27d2a9e2c65c6e140f93c0dc9e3e21787a91976899147bf809ea2b50226fff0dec5d9cfd76577da0b3d5d305aee2e866cdf3962fc8945d376a27da26cd8d273500cec5df70ddfef020cff87df1a42f708019a974809590899faee91a492659b953293f56b5569d568a5f2b6a9de52bcb8d8048ccc73d045b1ae6b9ea6fab30b1986401cf2b3777f5e1de39096f3fe21e084812674bf9ff7cb427aef17000000ffff",
      "0300f5164cadf0010000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "27",
      "ETag",
      "W/\"9811d2d99510042781c179d8e51b7115\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "a297bddb-246f-40d6-856c-aa9d08dcb6d2",
      "X-Runtime",
      "0.795850",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "POST",
    "path": "/items",
    "body": {
      "data": {
        "type": "item",
        "attributes": {
          "title": {
            "en": "First post",
            "it": "Primo post"
          },
          "slug": "first-post",
          "file": {
            "upload_id": "909140",
            "alt": null,
            "title": null,
            "custom_data": {}
          },
          "image": {
            "upload_id": "909141",
            "alt": null,
            "title": null,
            "custom_data": {}
          }
        },
        "relationships": {
          "item_type": {
            "data": {
              "type": "item_type",
              "id": "142359"
            }
          }
        }
      }
    },
    "status": 201,
    "response": [
      "1f8b08002e1b995d0003",
      "9454cb8edb300cfc95c2d726855f49d6bef5d2730fbd150b4191e944086db912156011f8df4bc9ce63b38b2ce29345ce0ca921ed53d24892497d4a7493d449b62aaa7596278b84de06e08026e8f82489acde7a0217a0a40921bc40cf905fda3afa3618470cd4c491df5677668a8c8bc4a1df71b00db0e519d6c95d54f0031ad98858bc4aabaccc42356495de232ecea5a683f28e4c27e68e47d66e357e2e933e25e3073e402364e83e4fb36a99a5cb74f5272fea625317e58f72537d4fb33a0db2cac217e0753a8359da024ad2a6777b3d44f382a36272f774677e9917abeabdf71332f418cb1afb8155e4d966732549a5c03941e6c0c31903b18309fd44df4f3a32f82d6ab77f0c7f790f57d115e114d33cced4693e7153c493a2da89a3c4e008590fbc7524c9b3e1d7e6c2e8bcb5d0933882755c3dc8564559bea4d161dd2bf40d03ebbf5f4ee4fe93e86517003f2d698521ed74bf43a050a495e84247c692dc86359c0372d0e2006f6168179ab10d58a68a465b50149b9c57d8c295da19364d5ab145a30e976863654b82732024738f37a510054325821316fe79166f2e496510a75a420e0348de935e85db28d30d2cc46deda513971b89f85398d89f6d78ab011b775dd4b39beb2c2dabecea66c4f137729bce1fa78bc7e9f243fa75bc19c5dcf8b9afe0eb7863f944b94fc75fc77deef18df8791dff030000ffff",
      "03007ba9fb175a050000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "26",
      "ETag",
      "W/\"a567f01c650db17afe48c07a379f6b58\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "fa0647d0-a493-4bc3-891b-cc8be3d84f5d",
      "X-Runtime",
      "0.112399",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "PUT",
    "path": "/items/1539612/publish",
    "body": null,
    "status": 200,
    "response": [
      "1f8b08002e1b995d0003",
      "9454cb8edb300cfc95c2d726855f49d6bef5d2730fbd150b4191e944086db912156011f8df4bc9ce63b38b2ce29345ce90a321ed53d24892497d4a7493d449b62aaa7596278b84de06e08026e8f82489acde7a0217a0a40921bc40cf905fda3afa3618470cd4c491df5677668a8c8bc4a1df71b00db0e519d6c95dac209109bd475c9cab4e073fa0918d88a2aab4caca8c59ca3b329d98158f5cbbd5f85c99f4d3327ee003344206f5799a55cb2c5da6ab3f7951179bba287f949bea7b9ad569a45bf802bc4e673097b68092b4e9dd5e0fd1bce0a898dc3ddd995fe6c5aa7aeffd840c1a635b633fb08a3cdb6cae24a9143827c81c783863207630a19fd0fda42383dfa276fbc7f097f770155d114e31cde34c9d861637453c59543b7194181c21eb81b78e247936fc2a2e4ede5ae8491cc13aee1eca564559bea4d161dd2bf40d03ebbf5f4ee4fe93e86517003f2d698521ed74bf43a0d0a495e8822263496ec36ece0139687180b730b40bcdd8062c5345a32d288a22e7bdb670a576864d93566cd1a8c325da58d992e01c08c9dce34d2b44c15089e084857f9e8b3797a43288532f21870124ef49afc26d94e9062ec4b2f6d289cb8d44fc294ceccf36bcd5808dbb2eead9cd75969655767533e2f81bb94de78fd3c5e374f921fd3ade8c62167ed6157c1d6f2c9f28f7e9f83fb9cf3dbe113fafe37f000000ffff",
      "0300e9182f1e5a050000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "25",
      "ETag",
      "W/\"b318fc25bd846d63149acfddade1034b\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "153387d1-4387-4f1f-8bac-6eb31f8b4992",
      "X-Runtime",
      "0.045672",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "GET",
    "path": "/uploads?page%5Blimit%5D=100",
    "body": "",
    "status": 200,
    "response": [
      "1f8b08002e1b995d0003",
      "dc94dd8e9b301085df65ae81d826c0e2e7e85557159a8003ac0c467868ba8df2ee35719aa469a2b2b9dbde581cfbf867e6d3610f1512827cdd435b81849ce57ccd21007a1f94d3d3a00d564e23d1d86e265216e41e6cfbd3ad0a11b37500bbb6a206649ab0001ad5d60d818cf39700069ce761c5d38ca52b9e642ce6094be2d09f8a1badc2b6c35a45435fbb3bb666ecd06d062f71a2c68c20fb49eb007a73bcdb8bd20cefa3bfc94f546a8b93a662db2a5d159d22f475ed41f5f388fa6ca596b43a1f3459325d71321f0e01b4f411ffbcc116c72240d2382967191592aa8a632582f13ce42c64c91721649cc9388ef24c7c75e54da376868668b072b5daed76913bd5949d0dd15a45362a4db7b87584b56bceebb7003668558fdd05dec50beeb9d79cd942ce3c8dcf947d1b7e63f6ea0167118e66635c21f483aee97af9e9e86e51db7fe3150e6ffe2cde9b8edd85ea1d3728e37c21ca2c5d5f12bb6657893d8a07247938bf3dd4a636d1dbf04754df06f5ff6655445cf06761feddb4bb3ccfa65ba42f4bd3c9e71fef09294f2f44e7ef8740b7f8bd2d4d1fb9e11aa7979f8ee6b26cf2284f9fcee66dcbeec23c591c4a373ff762ae880ca12e4a33f573cc0e875f000000ffff",
      "03009cad6a2974070000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "22",
      "ETag",
      "W/\"b5030e588e653f8945b15c6482ace0ed\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "28158a37-b6a3-4680-83da-06799f80a6c3",
      "X-Runtime",
      "0.036712",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "GET",
    "path": "/site?include=item_types%2Citem_types.fields",
    "body": "",
    "status": 200,
    "response": [
      "1f8b08002e1b995d0003",
      "cc564d6fe33610fd2b81ce716a49b6b3f12d457781143ded2e5aa08b80a0455a624d915a928ae318feef9da1a80f4bb10bec650b5f869c79e4f0cd9b918f11a38e46eb632458b48ee2d5fd7c15dd46ee5071585ae138aca873466c6ac72d062a5aa2ef49399e1bea8456378aef6fc0eb6e0240ea8c4a8cfe1671056be1a26738b4e0883c823bd7d15ad552dec2f56647322db5418fe190c5fc36dac89a7b83caaaa0deca0d87b3d6f3131c2ff2c28d40abb445a115606806dc2a0520cd32aec6c864b96ca1de0c586f0730d880ae8c28a9398ce07172dfc2bd19e0de0e70b04f8067baa442b50f17c09f51549276dbef044667c0e80c199d21a3b3f8c31d65a55077502c9d95f62ed325d09a6b9d4b4e4a5a59422b419cdee175d1e3d31bfd72f8b5c8768f65fab9f8fdfb3cffb8dffe95fe4917c9a7f4f381fdb337c96f8f7882d41b48c1728defe17d72aeb120eb2d7d1199ee3c4a13a1187f8dd65b2a2d07bfd190b762a436b28397b9782585b6704cb4dfefdbbc67d45aeedaf4add5c4d252c281c20de1925a475097242ba8ca39a1784e328f1f66f17c365f7e4d92757abf4e17778b87fbbfa3165097958f6c9fc04b0bb5aa156cc5a03e51f237ad50ba1f6ba32bfecb1f5a318df234fc7b2d0c27c99686679d7053fa52d842545ef7209ee6b0e3a867e26439e899360c2b5e5b6e6c0ff8f67c6a5efdde7ec9554d7cd203477b4592ac56697f47171b9d108a1641d77bd045922e1f7a6817db408d96efa1d224fd30ef4118159d6e07ce78ecc4c318afa43e94d8625cbd081006dae387d696e67ccae26c3ef88de750bdb1991115d6034a5a5650998d90c21d8066245aa84cd60cdbf1bfdf7d619e3d1a2732896e2b14b49543cd078d5b6d1cdd80b3ddc06edbf10396bb8369c3b8012861a0a50c536da5e8600c74d052b35a524336302477dd2e3374eb08f840ec807d195c252509f39404a1b2ce09a3483677c100a838359caa0c5fe349ca1ca455504bba1735a2b9acf1ade092bda387553c5f3c0c6aeee37a45787772dd9d5e772f266edf2ca3c4dbbcc26cea286f2063b7130ec6e3c877fd45a8a6ab1163f548bae130b8a2af7817787d146975eb30bb68a81717e20aa1ba51e5cb2bdeb0aeced450d61758e2c86c86445ff5236abdd2f04df0ea8af1e041d5618233e1f0db1488235228bcaca20644eec2d029386598562703ca600edad09e8c6f692d1d811cf09b16a89c28a5efa749275f9e3863762792b9c4ee1759e713729bbd9edab07181d9d03197a9bdf507909168064b3294c57925922b9568b23a2f017cec4865f856bc760cffb4224c1af352119e4a1cdca32a6c8597735f0511a27ebc0cfc15fe4f58cfeb11fe7471200364cc40ccfeff4473c139ffe965fe438267fcff4cba2783ee12dd9fc474a04cd80e1b3f4af619898bff3589cfa77f010000ffff",
      "0300384a9d9fac0c0000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "24",
      "ETag",
      "W/\"3a85c748ceaaa0019964566203cc7165\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "00bf2c8c-227c-4e94-9224-bf65241d95a7",
      "X-Runtime",
      "0.057992",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "GET",
    "path": "/items?version=published&page%5Blimit%5D=100",
    "body": "",
    "status": 200,
    "response": [
      "1f8b08002e1b995d0003",
      "9492416ac3301045af52b46d5224cb89631fa0eb2eba2b4528b69288c896914681627cf78ea484105a5abcd30cffff19de68229d04499a8f89e88e34846d78bd65055911f81a153634a81e2b09e0f43e80f2a4990868302a3ed4809257ed3c3c8dd6030a3560e7cde9dee6cebc22de8423360f51b6bec97a794c09d2a06108c6ac6ea9b908a3b1b21369a99ad6ac64e86a8307db8bbcf23463f6419b6531f4d7983062a13a21e3f60565f59ad135ddbc17bce155c3cb9772cb9f296b68b23bf59f985ec518ed9491a0ede04f7a4cf0225191e94e57fa37f865c137f523fbac8c3ba6b1d6fd70f18255d5dd24db56792fc09ef1387334f62aab17ecbd90c818f646fbd39ff26af7286f1315e15bb40573b5e6a3a59f2216866a2f2ed24422e082c25f07120202bf2f972eef9c1a405c94f3383dc6d6bc2c7778a9f9f34e0a2c48235a1b069ccce6f91b0000ffff",
      "03006b47138626030000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "X-DatoCMS-Cache",
      "MISS",
      "Content-Type",
      "application/json; charset=utf-8",
      "X-bullet-console-text",
      "[\"user: steffoz\\nAVOID eager loading detected\\n  Item => [:current_version, :creator]\\n  Remove from your finder: :includes => [:current_version, :creator]\\nCall stack\\n  /Users/steffoz/code/dato/api/lib/middleware/catch_json_parse_errors.rb:22:in `call'\\n  /Users/steffoz/code/dato/api/lib/middleware/maintenance_mode.rb:34:in `call'\\n  /Users/steffoz/code/dato/api/lib/middleware/expose_queue_time.rb:17:in `call'\\n  /Users/steffoz/code/dato/api/lib/middleware/fast_cors.rb:29:in `call'\\n\\n\"]",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "22",
      "ETag",
      "W/\"d217b5b9b8591e29a63207a577dc6019\"",
      "Cache-Control",
      "max-age=0, private, must-revalidate",
      "X-Request-Id",
      "af884c06-8019-49f6-99ee-cba7e2eb9656",
      "X-Runtime",
      "0.064508",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  },
  {
    "scope": "http://site-api.lvh.me:3001",
    "method": "GET",
    "path": "/job-results/76a407317f9344603247f1b5",
    "body": "",
    "status": 404,
    "response": [
      "1f8b08002e1b995d0003",
      "24cac10ac2400c04d07fc9d953f5207b13a4c72d889e444aba09125053b2a920cbfebb5b3d0d33f30a103a42b816108200ddb69b767bd8807f666e1d6719d94cad4de86e322dce194281a4b482389cc77eb8c46303c48ef2f8bd4fce19ef2b382497379f38a95108ff8ceabd2e2f825aebad7e010000ffff",
      "0300e027507584000000"
    ],
    "rawHeaders": [
      "X-Api-Version",
      "3",
      "Content-Type",
      "application/json; charset=utf-8",
      "Vary",
      "Accept-Encoding",
      "Content-Encoding",
      "gzip",
      "X-RateLimit-Limit",
      "30",
      "X-RateLimit-Remaining",
      "21",
      "Cache-Control",
      "no-cache",
      "X-Request-Id",
      "fc85dbe8-98c5-4a0b-ad41-bb68d15b4d63",
      "X-Runtime",
      "0.038317",
      "Access-Control-Allow-Credentials",
      "true",
      "Access-Control-Allow-Headers",
      "authorization, content-type, x-site-domain, x-api-version, user-agent, x-session-id",
      "Access-Control-Allow-Methods",
      "GET, POST, PUT, OPTIONS, DELETE",
      "Access-Control-Expose-Headers",
      "x-ratelimit-limit, x-ratelimit-remaining, x-ratelimit-reset",
      "Access-Control-Max-Age",
      "1728000",
      "Access-Control-Allow-Origin",
      "*",
      "Connection",
      "close",
      "Transfer-Encoding",
      "chunked"
    ]
  }
]